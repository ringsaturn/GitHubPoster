1613134280951238656 2023-01-11 11:22:37 +0000 <ringsaturn_me> 居然还有这种东西  https://t.co/HgxX7221DZ
1612762954503684097 2023-01-10 10:47:06 +0000 <ringsaturn_me> 一晃已经三年多过去了，21 年的目标在 23 年终于要实现了  https://t.co/44WbDYu6NW
1611371230741032960 2023-01-06 14:36:53 +0000 <ringsaturn_me> 一个 admin 模版都能整出这么多幺蛾子，就挺草台班子的…
1610351035238813699 2023-01-03 19:03:00 +0000 <ringsaturn_me> 这些年最大的痛苦来源是各种乱七八糟的内部/外部 API 用 HTTP 200 的一坨 JSON 返回异常失败。
1610181730706788352 2023-01-03 07:50:14 +0000 <ringsaturn_me> 大厂也是草台班子，太草台了
1609381491783651329 2023-01-01 02:50:23 +0000 <ringsaturn_me>  https://t.co/GsJp6UwKk4
1608506308738846720 2022-12-29 16:52:43 +0000 <ringsaturn_me> 试着搞了个小工具把 RSS 同步到 GitHub Issue 里，唯一的问题是 search 接口限速是比较严格的，所以不适合太多 RSS 源。
1607409892217999361 2022-12-26 16:15:57 +0000 <ringsaturn_me>  https://t.co/7uW76B4cU4  Linux 基金会值得关注的新项目
1607377019230388225 2022-12-26 14:05:19 +0000 <ringsaturn_me> btt 是生产节点少数能用的磁盘 IO 分析工具   https://t.co/eqn3rcuFiS
1606328257175261189 2022-12-23 16:37:55 +0000 <ringsaturn_me> 搞明白一件事的逻辑之后再看相关公司的API 报价，真的不值那个钱，赚的就是信息差吧。
1605900218721263623 2022-12-22 12:17:02 +0000 <ringsaturn_me> 靴子落地了
1605596472149348353 2022-12-21 16:10:04 +0000 <ringsaturn_me>  https://t.co/z8xEuUTENb  这个项目背后的视频生成项目更有意思  https://t.co/XxYiXca698
1605594109929889792 2022-12-21 16:00:40 +0000 <ringsaturn_me> Rust port 也有人开始用了，还是德国人   https://t.co/I3WU16P7v1
1605563472095637505 2022-12-21 13:58:56 +0000 <ringsaturn_me> 腾讯云的镜像好像是清华镜像搭的？意外进入了 404 页面  https://t.co/QxcELipQXE
1605202312527745025 2022-12-20 14:03:49 +0000 <ringsaturn_me> 诡异的 bug   https://t.co/6O7eIS9N7z
1604448683767959552 2022-12-18 12:09:10 +0000 <ringsaturn_me> 准备把 Sentry Python SDK 好用的 tracing 在 Go 里给 gin 实现一份   https://t.co/YgcI3rfltf
1603037594644021248 2022-12-14 14:42:00 +0000 <ringsaturn_me> 和盒马员工聊过一次，上个月凌晨一点还在送货，但是到了家门口没人开门的话还得把货物原样拉回去。因为一半快递都去过有阳性的小区在家隔离了。  这个月彻底没运力了，现在选择公交车过去买好几大袋子东西，打车回家。
1601987174953455616 2022-12-11 17:08:00 +0000 <ringsaturn_me> @RainViewer Need M1/M2 CPU?
1601978158089089027 2022-12-11 16:32:10 +0000 <ringsaturn_me> 查资料发现了多年前的项目  https://t.co/b8id7Tvar3  难以置信这种如果演进得足够成熟稳定就是大杀器级别的工具居然在社区里一点波澜都没有。  对代码没有什么侵入性，只要把原来的代数运算逻辑用这个项目的类型标注后就能生成 SIMD 加速的实现，和 wire 的依赖注入属于同样优雅的方式。
1601929328324800512 2022-12-11 13:18:08 +0000 <ringsaturn_me> 为了看 Reinventing Backend Subsetting at Google 这篇文章订了一年的 ACM
1601240678507237377 2022-12-09 15:41:42 +0000 <ringsaturn_me> 比如博客里翻译的 Evernote OCR 内容的背景  https://t.co/enFByr031g  https://t.co/FLI6DULGQs
1601235865568567296 2022-12-09 15:22:34 +0000 <ringsaturn_me> 我从约10年前开始存档看过的各种资料，中间经历过若干次软件迁移、中断。但是延着一些关键词搜索依旧能找到当时的记录，一些感兴趣的事情也因此能有个脉络。  甚至一度痴迷 LaTeX 的排版，用 Hazel 实现了手机保存文章 Markdown 到 iCloud 目录触发规则运行，处理成 PDF 一并发到归档目录里。
1600696967130386432 2022-12-08 03:41:11 +0000 <ringsaturn_me> 北极历史气象数据可视化   https://t.co/rtEWwpz2pB
1600521225520173056 2022-12-07 16:02:51 +0000 <ringsaturn_me>  https://t.co/slGvJmU7Mf  时区的预索引数据构建一直很慢，本机约 12 分钟，先使用多个 goroutine 并发计算优化到了 6 分钟，后上了乱序计算将快和慢的时区均匀散开，开更多的 goroutine 只需要 1 分半了，但是产物好像有点不太对的样子，说不上来哪里有问题，但是二进制的 diff 就是心理没底的样子。
1598727983027871744 2022-12-02 17:17:08 +0000 <ringsaturn_me>  https://t.co/xlqAuHJsHd
1598727908138184704 2022-12-02 17:16:50 +0000 <ringsaturn_me> 看了下 Uber H3 Go 的 V4 大版本升级的变化，我居然在庆幸之前没有太多使用。
1598323858880208899 2022-12-01 14:31:18 +0000 <ringsaturn_me>  https://t.co/ZWzeYBMMcx  阿里云 DTS 在 Mongo 上不好使自己糊了一个
1598008293850742784 2022-11-30 17:37:21 +0000 <ringsaturn_me>  https://t.co/AUBMVlIBP3 十分好用，给 tzf-rs 也顺手加上了  https://t.co/Beg82K7f9L  https://t.co/n0AVU5tvOe
1597974084134240263 2022-11-30 15:21:25 +0000 <ringsaturn_me> 吸取了年初的经验教训，给 tzf 的 benchmark 补上了 p50,p90,p99 的数据，数据波动上倒是预料之中  https://t.co/avGLAw1Vvm
1597429698929528832 2022-11-29 03:18:13 +0000 <ringsaturn_me> 一个只读获取数据的接口，要用 POST 协议携带参数，然后用 query 参数控制翻页。。。服了
1597215108148535296 2022-11-28 13:05:31 +0000 <ringsaturn_me> 用下来发现 Rust 在地理相关领域挺匮乏的，没法跟 Go 比。  要么功能全，要么速度快，两样居然都没占到也是服了。
1596377949162262528 2022-11-26 05:38:57 +0000 <ringsaturn_me> 代码是一年比一年写得多  https://t.co/Z19MbZBuVT
1595461514122567683 2022-11-23 16:57:21 +0000 <ringsaturn_me> 完完没想到这么一个常规操作在 Rust 里竟然很麻烦   https://t.co/3gerFQPThI
1594375841253068802 2022-11-20 17:03:17 +0000 <ringsaturn_me> tzfpy vs tzfrspy  同样的原始数据，同样处理成 Python 扩展，Rust 在算法实现少了一些预索引优化的前提下，除了 Max 指标比 Go 多了一些以外，其余都快了不少。  也许后续 tzfpy 整个切换到 Rust 上去。  https://t.co/YmWiPpsKyh
1594315425290293249 2022-11-20 13:03:12 +0000 <ringsaturn_me> 一个周末能折腾出来的东西比预期多了一些  https://t.co/rb671fiYph
1594298473800949761 2022-11-20 11:55:51 +0000 <ringsaturn_me> @tidwall Thanks for your awesome geo libraries! They are blazing fast and the algorithm implement is state of art!
1594296244708728832 2022-11-20 11:46:59 +0000 <ringsaturn_me> 之前用的  https://t.co/5FIGhYSy1r 耗时  1,710,931 ns/iter (+/- 11,662)  重写了 Go 里  https://t.co/xixdWm5dO0 到 Rust 中  https://t.co/bm3RV2w5y7  46,001 ns/iter (+/- 203)
1594294349193687040 2022-11-20 11:39:28 +0000 <ringsaturn_me> 原因找到了，编译器报警太多图省事用了太多 to_owned  换成指针快了 10 倍
1594241255307087872 2022-11-20 08:08:29 +0000 <ringsaturn_me> 暂时无法理解的事情：把 Go 的实现做了一些简化移植到了 Rust 上，还更慢了。
1594007988796542977 2022-11-19 16:41:34 +0000 <ringsaturn_me> 不是 Rust 实现有问题，而是 Go 的实现做了很多优化
1593971789612605442 2022-11-19 14:17:43 +0000 <ringsaturn_me>  https://t.co/V5hBpTqq1n
1593928755868626944 2022-11-19 11:26:43 +0000 <ringsaturn_me> fuzzy 的性能比 Go 快了不少
1593871677758197760 2022-11-19 07:39:55 +0000 <ringsaturn_me> 就是一次查询 200 万 ns 有点说不过去……  可能是算法实现的效率比较差，也可能是写了个 bug。
1593652665287704577 2022-11-18 17:09:38 +0000 <ringsaturn_me> 从 init 项目到跑出个能看的结果花了半年……
1593652022217084929 2022-11-18 17:07:05 +0000 <ringsaturn_me> Rust 实现总算有个响了～  https://t.co/1gSy0iMr9L
1592544820194865153 2022-11-15 15:47:27 +0000 <ringsaturn_me> 以及 arena 已经合并了，也许用得上。   https://t.co/7IIKdlZt3M
1592544029174304770 2022-11-15 15:44:19 +0000 <ringsaturn_me> 好处是时区信息和 Go 源代码关联，一致性好保证。  相对的缺点可能就是时区数据更新周期、Go 发布周期之间可能会有一些时间差，新的时区名字的支持会滞后一些。
1592544026427002880 2022-11-15 15:44:18 +0000 <ringsaturn_me> 之前在 Alpine 镜像里运行和时区相关的功能会报错，因为默认没有时区数据，需要手动安装。  今天翻了下 Go 代码，发现可以把 Go 源代码的那份数据打包到二进制中：  -  https://t.co/O6do90ZTmr -  https://t.co/O9FNvHjrPC
1591428540851163136 2022-11-12 13:51:46 +0000 <ringsaturn_me> Python 调用 Go 编译的 .so 没有问题，就是得手动回收下内存  https://t.co/7od13XZKTr  可能是正经写过的第一个内存泄漏代码
1591056622679646208 2022-11-11 13:13:53 +0000 <ringsaturn_me>  https://t.co/qj12jRjxkg  羡慕这份数据啊
1589270827303768064 2022-11-06 14:57:47 +0000 <ringsaturn_me>  https://t.co/RRuuoqR1ko  大部分地区试着覆盖了，效果看着还行
1589185917428060160 2022-11-06 09:20:23 +0000 <ringsaturn_me>  https://t.co/4LjlK2JO8K
1589184949831471104 2022-11-06 09:16:32 +0000 <ringsaturn_me> 分辨率有点太高了……  https://t.co/qsu09qgWvi
1589168441747177473 2022-11-06 08:10:56 +0000 <ringsaturn_me> 预计两周之内发布 tzf 的索引加速 FuzzyFinder   https://t.co/6qRTc9Us2b  benchmark 结果显示快了不少  https://t.co/MFaNEmdSfp
1587067939227725824 2022-10-31 13:04:17 +0000 <ringsaturn_me> 腾讯系的产品和服务日渐智障，除了扫码啥都不会。
1586685252835033088 2022-10-30 11:43:38 +0000 <ringsaturn_me> 思路挺好的，看了下文件格式应该是 textbundle？
1586684562880417793 2022-10-30 11:40:53 +0000 <ringsaturn_me> @Stapx_Happy GitHub Markdown 貌似只能这么干，从 Uber 那边抄的  https://t.co/MUjRbpaK6R
1586619562979491842 2022-10-30 07:22:36 +0000 <ringsaturn_me>  https://t.co/B2RZBAb0HK  徒手写 HTML 表格…  https://t.co/5hM2c4fzK2
1584924772034523137 2022-10-25 15:08:06 +0000 <ringsaturn_me>  https://t.co/uIxqv7F8c9 悄悄升级了，还挺好看
1584578810610995203 2022-10-24 16:13:23 +0000 <ringsaturn_me>  https://t.co/9W8ZyTwqH3  部分数据源已经适配了新时区名称，部分旧系统暂时无缘了
1583089336006103043 2022-10-20 13:34:44 +0000 <ringsaturn_me>  https://t.co/tdEhGEsSFb
1580607915005595648 2022-10-13 17:14:27 +0000 <ringsaturn_me> 这玩意就是认真找东西的时候很费眼睛  https://t.co/ZbLk1ZgaOm
1580604856695283726 2022-10-13 17:02:18 +0000 <ringsaturn_me> 黑魔法修炼进行时  https://t.co/lTALsV9p31
1578312966113759232 2022-10-07 09:15:09 +0000 <ringsaturn_me> 买了个新字体，挺好看的   https://t.co/iQMK7MCsOP  https://t.co/PEBm1ff5H7
1577896781727559680 2022-10-06 05:41:23 +0000 <ringsaturn_me> 弄这个东西时的 BGM   https://t.co/HSaie67YBF
1577251575344398336 2022-10-04 10:57:34 +0000 <ringsaturn_me> 没用 RTree/QuadTree 的一通操作后 10 倍，起，的性能就糊出来了。  可能就是内存上的效率没 QuadTree 那么高效，冗余度略大，但是查询飞一般的快。
1576934440147685376 2022-10-03 13:57:23 +0000 <ringsaturn_me> 见牙医不要怕，向 Bean 学习
1576844528027193344 2022-10-03 08:00:06 +0000 <ringsaturn_me> 至今没想明白的一件事：我那个暴力遍历的逻辑，居然比目前现成的 RTree/QuadTree 实现都快，我在怀疑那些算法是不是没实现好，只能自己动手搞一个了
1576795687592738816 2022-10-03 04:46:02 +0000 <ringsaturn_me> 业务时间写的时区库  https://t.co/B2RZBAb0HK 有两个项目在用，还都是德国人写的和机场、航班有关的东西。
1575803523362480129 2022-09-30 11:03:31 +0000 <ringsaturn_me> 地铁广告看到一个 App，里边的东西好劲爆……  https://t.co/eWc9u56JR7
1575190132491100160 2022-09-28 18:26:07 +0000 <ringsaturn_me> 不是感觉，是错觉
1575173400749752320 2022-09-28 17:19:38 +0000 <ringsaturn_me> 距离发明新的黑科技只有两步之遥的感觉
1573680592319021057 2022-09-24 14:27:45 +0000 <ringsaturn_me> 「青春ブタ野郎」两个机翻:  - Safari: 「青春野猪朗」 - 彩云小译: 「青春猪杂种」  更狠的是「青春ブタ野郎はバニーガール先輩の夢を見ない」被 Safari 翻译成了「青春猪崽子不做兔女郎前辈的梦」   https://t.co/7fSAMaVQOb  https://t.co/AXfifMxibJ
1571347290874576898 2022-09-18 03:56:03 +0000 <ringsaturn_me> 现在是打肿脸充胖子的字面意思
1571177553200816128 2022-09-17 16:41:34 +0000 <ringsaturn_me> 曾经错过了歌剧魅影在北京的演出，后来在 Google Alerts 订阅了「歌剧魅影」+「北京」的新闻，今天收到了 2023 年永久停演的邮件。
1570015985146658816 2022-09-14 11:45:55 +0000 <ringsaturn_me> 整张专辑都是这个进度条
1570015850043944960 2022-09-14 11:45:22 +0000 <ringsaturn_me> Spotify 播放 Imperial March 进度条会变光剑  https://t.co/RSot4vRQtk
1569369649602785280 2022-09-12 16:57:36 +0000 <ringsaturn_me> @cloudwu Mapbox 是自己开发了一套  https://t.co/hAeP1FkGBM
1568590862216724480 2022-09-10 13:22:59 +0000 <ringsaturn_me> Neo4j 数据库挺有意思的，又是一个可能被我当锤子的东西。
1568262232789893121 2022-09-09 15:37:07 +0000 <ringsaturn_me> 没啥问题啊，Taio 自己的流量被挟持了才会弹这个吧？
1568232782668926978 2022-09-09 13:40:06 +0000 <ringsaturn_me>  https://t.co/54tTYqf6yr
1565913960330588161 2022-09-03 04:05:56 +0000 <ringsaturn_me> 算是日常购买「无用良品」之外的另一个爱好，制作「无用良品」。
1565754872523554816 2022-09-02 17:33:46 +0000 <ringsaturn_me> 现在部署一次博客大概 20 秒   https://t.co/8gLSrcF0uT
1564631618664378369 2022-08-30 15:10:21 +0000 <ringsaturn_me> Sentry 不知何时新加了一个快捷键 Control+K 触发搜索，于是和删除光标之后的文本快捷键就冲突了。
1564143426391912448 2022-08-29 06:50:27 +0000 <ringsaturn_me> 医生今天检查伤口，顺便把上次的纱布扯出来了……  亏我还以为就快满血复活了
1563721277533454336 2022-08-28 02:52:59 +0000 <ringsaturn_me> 本周和同事聊过 @AiDreamily + 图片生成，制作图文并茂的小说……
1563507460857802754 2022-08-27 12:43:21 +0000 <ringsaturn_me> @spacewanderlzx 这个插件在 Python 里不是很爽，Go 里还行。
1561908483125280768 2022-08-23 02:49:35 +0000 <ringsaturn_me> psf 是真的很喜欢每隔几个月弄个 breaking change
1560999795891716098 2022-08-20 14:38:47 +0000 <ringsaturn_me>  https://t.co/9SSsKs4G9J  应了当年明月句话，「一个二愣子加另一个二愣子，并不等于二，而是二愣子的平方」
1560856359322599426 2022-08-20 05:08:50 +0000 <ringsaturn_me> 底层太熟的大佬写的代码，一堆位运算来回操作，我……
1559940561544495104 2022-08-17 16:29:46 +0000 <ringsaturn_me> 谁还没手抖在生产环境跑过推送测试呢？
1559939007261249536 2022-08-17 16:23:36 +0000 <ringsaturn_me> 效率很高，时区的多边形实验了一把只有之前的一般体积了。
1559363336357269504 2022-08-16 02:16:05 +0000 <ringsaturn_me> 今天查数据时注意到的奇怪的时区形状  https://t.co/YBz577lUje
1559202993849135106 2022-08-15 15:38:56 +0000 <ringsaturn_me> ……  https://t.co/XfTaSCKCgO
1559126276488982531 2022-08-15 10:34:06 +0000 <ringsaturn_me> 今天突然想起来这个问题有了泛型之后就好解决一些了  https://t.co/PAkGrXipbR
1558833223295127553 2022-08-14 15:09:36 +0000 <ringsaturn_me> 截止目前发现的唯一一个真的用树形结构做时区搜索的项目已经多年没有实际维护，一顿敲打之后勉强运行起来了，将缺失的海洋数据传了进去，于是……  https://t.co/QYRQxkAzLj
1557332529363185670 2022-08-10 11:46:23 +0000 <ringsaturn_me> Hilbert R-tree 可以试下
1557322862653886465 2022-08-10 11:07:58 +0000 <ringsaturn_me> 相关降水后续  https://t.co/Qb6cZXBoBs
1557021050268815360 2022-08-09 15:08:41 +0000 <ringsaturn_me> @WordlessEcho 还挺好用的，很可惜
1557003559866343424 2022-08-09 13:59:11 +0000 <ringsaturn_me> 次日路过  https://t.co/3wzDzkwUtR  https://t.co/AgT30pIDpJ
1556997136142970881 2022-08-09 13:33:39 +0000 <ringsaturn_me> 啃了不少资料和项目，发现一个和教科书不一致的现象：多边形搜索没有只用 RTree 做的，到了具体实现都是各种类似射线法的方案做的，用 RTree 的部分最多只是反应部分特征，比如过滤候选项。  RTree 用得多的场景还是 POI 这类的。  ---  感觉我的暴力搜索遍历没有啥原则性错误。
1556599340319526912 2022-08-08 11:12:57 +0000 <ringsaturn_me> 擦肩而过，之前雷达上看这个方向有红色回波。  https://t.co/uyimzB86SI  https://t.co/vfAJL0JgEO
1556503616034287617 2022-08-08 04:52:35 +0000 <ringsaturn_me> 一场雷暴的边缘  https://t.co/ekf3CDkk6K
1553784786505805824 2022-07-31 16:48:55 +0000 <ringsaturn_me> 好像真的，一不留神，用循环遍历搞出来一个比目前的解决方案都快得多的经纬度转时区库  https://t.co/mptaZmeE7L  下半年学下 Rust 争取移植过去。
1553765450575917056 2022-07-31 15:32:05 +0000 <ringsaturn_me> rc39 解决了 Linux 打包的问题   https://t.co/CUqlmrlHFU
1553649001609588736 2022-07-31 07:49:22 +0000 <ringsaturn_me> 经历了上周的难产之后  https://t.co/NCm1deL7vk  魔改了一堆打包配置，本周 rc30 在 TestPyPI 发布成功了  https://t.co/SjP1eLW0uz  争取再下周能正式发布吧
1551958856875397120 2022-07-26 15:53:20 +0000 <ringsaturn_me> 美国西海岸的云  https://t.co/MQpgAKl5jG
1551234497634775041 2022-07-24 15:54:59 +0000 <ringsaturn_me> 这几年的工作至少让我以后的消费做到了避坑。
1550842496766185473 2022-07-23 13:57:19 +0000 <ringsaturn_me> 用 Poetry 发布跨平台的带有 C 扩展的 Python 包简直是噩梦
1550789146586673152 2022-07-23 10:25:19 +0000 <ringsaturn_me> 用 CGO 加了个 Python 扩展，平均速度比 Python 带 Numba 加速的方案还要快4倍。。。
1549624782160678914 2022-07-20 05:18:33 +0000 <ringsaturn_me> 一个 for 循环遍历竟然比用了 RTree 处理速度还快，稳定复现结果，很奇怪。   https://t.co/mptaZmeE7L
1549394130144731136 2022-07-19 14:02:01 +0000 <ringsaturn_me> 「我这没问题」
1549023812750311425 2022-07-18 13:30:31 +0000 <ringsaturn_me> GitHub 把 GeoJSON 可视化渲染地图数据换成了 Azure Maps  图一是 Gist 渲染结果，图二是  https://t.co/jHgJMCJwYD   只是想看下点的分布情况。。  https://t.co/AqmyyWsEwU
1546879124136161281 2022-07-12 15:28:17 +0000 <ringsaturn_me> 今天早上抱着摸电门的觉悟，动了一个两年无人问津的项目，然后就修到了现在……
1546107944164798464 2022-07-10 12:23:53 +0000 <ringsaturn_me> 用汽车传感器探测到的温度数据分析城市热岛。   https://t.co/QzvnoSc0NK
1546077334654308352 2022-07-10 10:22:15 +0000 <ringsaturn_me> Tile38 Slack 群里看到了  https://t.co/FvjCy7k8T0  看着还不错  https://t.co/LJncPLxHlb
1546002826954182656 2022-07-10 05:26:11 +0000 <ringsaturn_me> iOS 16 的翻译够彻底的，图片也被翻译了。  https://t.co/OBCNBks1Na
1538919126630305792 2022-06-20 16:18:06 +0000 <ringsaturn_me> @whousewr @Ericwang1101  https://t.co/Te4gTX62np
1538917440905613312 2022-06-20 16:11:24 +0000 <ringsaturn_me> GCP 上的好东西  https://t.co/VZ5sK5KALF
1538013380367515648 2022-06-18 04:18:59 +0000 <ringsaturn_me> 大航海时代的方式是真的简单实用啊
1537830084937416705 2022-06-17 16:10:38 +0000 <ringsaturn_me> 数值计算知识都还给老师了
1535945641259479040 2022-06-12 11:22:32 +0000 <ringsaturn_me> @WordlessEch0 彻底整合（即将独占）了 Dark Sky 的数据
1535279314031083520 2022-06-10 15:14:47 +0000 <ringsaturn_me> 被流调了，踏实在家填之前开的 Rust 项目坑吧。。
1534150064155017216 2022-06-07 12:27:33 +0000 <ringsaturn_me>  https://t.co/plswepiW52
1533346929999896577 2022-06-05 07:16:10 +0000 <ringsaturn_me> 有种预感，用 Rust 东拼西凑出来的新玩具比已知的 Python 实现的性能优势至少一个数量级。
1533334711103131648 2022-06-05 06:27:37 +0000 <ringsaturn_me>  https://t.co/I7XDfWPBp1
1533317580294742016 2022-06-05 05:19:33 +0000 <ringsaturn_me> build 出来的二进制体积很小
1533117036036952065 2022-06-04 16:02:39 +0000 <ringsaturn_me> Rust 项目对磁盘的消耗比一般的 Python 还大。。。
1532979124318314496 2022-06-04 06:54:39 +0000 <ringsaturn_me> 时区 debug 工具弄出来了   https://t.co/zUibYeSwnD  https://t.co/iuRYieLg1A
1531989109706997763 2022-06-01 13:20:41 +0000 <ringsaturn_me> 之前的 Google SRE 书里的看的调度方式似乎被实现了  -  https://t.co/2EpkjP44Gk -  https://t.co/IWKGmL3ZtV
1531866395301904384 2022-06-01 05:13:03 +0000 <ringsaturn_me> 只要一说「黑森林」Siri 就开始乱接下茬。。。
1531277879387967488 2022-05-30 14:14:30 +0000 <ringsaturn_me> 不对，压缩方式适用的是趋势上单调的数据，地理多边形不合适
1531266802948669440 2022-05-30 13:30:30 +0000 <ringsaturn_me> 5.5MB 这个体积放到 Go 的二进制里相对更好接受
1531266352748503040 2022-05-30 13:28:42 +0000 <ringsaturn_me> 想起了天文上的星历表，里边存储的直接是切比雪夫多项式系数，效率也很恐怖。
1531266130655911936 2022-05-30 13:27:49 +0000 <ringsaturn_me> - GeoJSON 格式的全球时区多边形 154 MB - 处理成 Probuf 83.5 MB - 有损降低下多边形边数 16.7MB  用了一个数据压缩方式，体积还能压缩：  83.5MB -&gt; 20.2MB 16.7 MB -&gt; 5.5MB  不过这个只是数据存储的体积，实际使用的时候因为需要构造多边形内存占用是不变的。
1531183883420463105 2022-05-30 08:01:00 +0000 <ringsaturn_me> Oppo 的 API 文档写得是真好，很朴实直接，不用几十个超链接来回跳转查参数定义。
1530898321237110784 2022-05-29 13:06:17 +0000 <ringsaturn_me>  https://t.co/B2RZBAb0HK
1530893674329960448 2022-05-29 12:47:49 +0000 <ringsaturn_me> 年度 flag 在立的当周之内完成了。。
1530874403663142912 2022-05-29 11:31:14 +0000 <ringsaturn_me> 大力奇迹，暴力遍历  https://t.co/8J0hKtL50f
1530595943715770370 2022-05-28 17:04:44 +0000 <ringsaturn_me> 立个年度 flag：这事能搞
1529874175245971467 2022-05-26 17:16:41 +0000 <ringsaturn_me> 想起了 Uber 前不久的博文  https://t.co/i47vOthuff
1529756410401427456 2022-05-26 09:28:44 +0000 <ringsaturn_me>  https://t.co/u5t6x1zEqL  这是觉得自己还能蹦跶蹦跶收点钱？
1529107868388970496 2022-05-24 14:31:39 +0000 <ringsaturn_me> 看了点数据库的东西有种我也能写一个玩玩的错觉。
1528701552944218113 2022-05-23 11:37:06 +0000 <ringsaturn_me> 我对这个地名很熟悉，原因是用的一个地图服务商对这个地名搜索返回的经纬度大约每半年变一次，并且这个结果是在测试样例里断言判断的。  第一次碰到这个现象的时候整个人是懵掉的，代码没改那块 CI 就是失败了。  后来这个测试样例被删了，就清静了。
1528242049882783747 2022-05-22 05:11:12 +0000 <ringsaturn_me> GitHub 支持 Markdown 渲染公式了！   https://t.co/FEEdUZiNN1  效果不错：  https://t.co/clOQyk8PmE
1526964186151985152 2022-05-18 16:33:26 +0000 <ringsaturn_me> 原来 Sentry 在 GitHub 上的 App 是 SaaS 版本用的，私有部署的 Sentry 需要自己创建对应的 App  -  https://t.co/ROWIeLpTxy -  https://t.co/GxfLIAHA6p
1526222746853572609 2022-05-16 15:27:13 +0000 <ringsaturn_me> 很意外：几行代码优化了一大截性能
1525711173592616960 2022-05-15 05:34:24 +0000 <ringsaturn_me> 似乎还没有用 Go 实现的多边形数据做的经纬度转时区库，跃跃欲试觉得可以搞一个
1525401077679415297 2022-05-14 09:02:12 +0000 <ringsaturn_me>  https://t.co/FbXyivbR1u
1524345414844964864 2022-05-11 11:07:22 +0000 <ringsaturn_me>  https://t.co/MxGuhcchbZ
1523353996420784128 2022-05-08 17:27:49 +0000 <ringsaturn_me> 再翻一翻有第三方库实现了   https://t.co/Dnqmf8nmC1  用起来还挺方便    https://t.co/DnnBahI0Ao
1523353972211257344 2022-05-08 17:27:44 +0000 <ringsaturn_me> 在想如何用 Go 实现 API 返回的结构体过滤出用户指定的字段，想起前不久看的 Netflix 用 Protocol Buffer 的 FieldMask 做法，用了一个 `Merge` 的函数，于是查了下，发现 Go 至今还没支持   https://t.co/bygpUK1knN  但是 Java/Python 已经有了  https://t.co/Tq7fV2yu6i
1522399158287486976 2022-05-06 02:13:38 +0000 <ringsaturn_me>  https://t.co/GhRSRsCWcH
1522398720326705154 2022-05-06 02:11:54 +0000 <ringsaturn_me> 国内有家公司做的事情也类似，叫 Geohey  https://t.co/GQ1w8iEog7  不过在代码和数据库中更偏好 PlaceKey 这种形式  https://t.co/H2x5Ds8vLy
1521410912808169472 2022-05-03 08:46:42 +0000 <ringsaturn_me> 预计生产环境跑一段时间就能发布 v1.0.0 了  https://t.co/FAGa5KTPNf  Go 中更符合直觉的 Apollo 配置加载  https://t.co/gOqaYBx6Jq  比手动 GetString 然后赋值给 field 来得清爽。
1521115019328757760 2022-05-02 13:10:56 +0000 <ringsaturn_me>  https://t.co/5VQ7iCh5Pb
1519669315326201857 2022-04-28 13:26:13 +0000 <ringsaturn_me> 早期的 Go JSON V2 设计实验   https://t.co/fMRwnyinrk  看会议纪要已经进行一年多了，还有 code review 录像可以看，还挺有意思的
1516777485102628868 2022-04-20 13:55:07 +0000 <ringsaturn_me> 多亏昨天处理了，否则今天心态应该会崩  https://t.co/0yiwDElYKe
1516077453432688640 2022-04-18 15:33:26 +0000 <ringsaturn_me> @sspai_com 的 MagStone 真香
1516076544107589636 2022-04-18 15:29:50 +0000 <ringsaturn_me>  https://t.co/aCzrs4WYoZ
1515697301699936261 2022-04-17 14:22:51 +0000 <ringsaturn_me> 也是一种激情燃烧的岁月。  https://t.co/gsh9Yb7Wda
1515013588968042498 2022-04-15 17:06:01 +0000 <ringsaturn_me> NumPy einsum 将代数运算的表达从基本的对象计算，提升到了原始矩阵运算的形式上，对人的要求也更高了   https://t.co/NOMNytxHYi
1514602670606020608 2022-04-14 13:53:11 +0000 <ringsaturn_me> 还记得十年前温的发言。
1513905530418307073 2022-04-12 15:43:00 +0000 <ringsaturn_me> 预测轨迹收敛了
1513904919337529347 2022-04-12 15:40:34 +0000 <ringsaturn_me> 闪电可视化
1513844851347189767 2022-04-12 11:41:53 +0000 <ringsaturn_me> Oh My Zsh 预置了一个 alias `gc!`
1513178970069512204 2022-04-10 15:35:54 +0000 <ringsaturn_me> 比如为了使用 runtime 的调度机制，在 src/runtime/time.go 实现代码之后用 //go:linkname 移植到了 src/time/sleep.go 中
1512793986045337600 2022-04-09 14:06:07 +0000 <ringsaturn_me> Golang 的 Ticker 用起来很方便，但是背后的逻辑有些复杂..
1512428490292793346 2022-04-08 13:53:46 +0000 <ringsaturn_me> 比如因为镜像源故障导致的线上事故   https://t.co/SPSs7iU7ML
1512422693735346176 2022-04-08 13:30:44 +0000 <ringsaturn_me> Google SRE 的书真是好啊
1512085079061073920 2022-04-07 15:09:10 +0000 <ringsaturn_me>  https://t.co/8DlUQNZeLR
1512083843062599683 2022-04-07 15:04:16 +0000 <ringsaturn_me>  https://t.co/tLP1fovXZ9
1511287312831094786 2022-04-05 10:19:08 +0000 <ringsaturn_me> EPA 的 AQI 标准中，Moderate 级别的 PM2.5 的上限是 35.4，目前还不知道怎么确定的，在美国政府的存档文件中找到了一个 203 页的 PDF  https://t.co/GguJrRd45r 提中保持沿用「35」的结论。具体的依据还要再找找。  https://t.co/fJGVfKfIEC
1510536610961534978 2022-04-03 08:36:07 +0000 <ringsaturn_me> 国产垃圾全家桶软件产品和研发吃屎去吧，这么多年只会添乱。
1509718212774342656 2022-04-01 02:24:05 +0000 <ringsaturn_me>  https://t.co/w20dTYVWUD
1508651028358447106 2022-03-29 03:43:29 +0000 <ringsaturn_me> 又搞事情了，我现在对 pallets org 没啥指望了   https://t.co/ApmmhTwXdo  https://t.co/c2Ifr6UPmb
1507930897617911813 2022-03-27 04:01:56 +0000 <ringsaturn_me> 注意到了奇怪的东西  https://t.co/7fgwLPME6N
1507628606591176704 2022-03-26 08:00:44 +0000 <ringsaturn_me>  https://t.co/uJKGQvO6PZ
1507594508350812163 2022-03-26 05:45:15 +0000 <ringsaturn_me> 这么多年了， KaTex 还是没有 MathJax 好用，基本的 inline 还是有 bug
1507023459078983689 2022-03-24 15:56:06 +0000 <ringsaturn_me> 半夜提交了一个实验性质的代码，CI 没跑起来，原来 GitHub Actions 又出问题降级了。
1506673214625558528 2022-03-23 16:44:21 +0000 <ringsaturn_me> 见过一些人的主页 Pin 了一些大项目或者简介里提了一下是某某项目贡献者，好奇翻了 PR 和 commit 后都是 typo 性质的提交，就有点失望了。
1505555734666559488 2022-03-20 14:43:53 +0000 <ringsaturn_me> Raycast 是个蛮野心勃勃的项目，比 Alfred 设计上更新一些   https://t.co/WKhQMzfaW8
1505509230358728707 2022-03-20 11:39:06 +0000 <ringsaturn_me> 迄今为止发明的菜，排名不分先后  https://t.co/4DwS4e9mva
1505387562906517510 2022-03-20 03:35:38 +0000 <ringsaturn_me> 原来如此   https://t.co/6liJuIhHom  https://t.co/WGtAAKnxxv
1505210672119918592 2022-03-19 15:52:44 +0000 <ringsaturn_me> 还是外表包一层吧，里边没法扩展
1505210553916043267 2022-03-19 15:52:16 +0000 <ringsaturn_me> Driver 内部实现真是一团乱麻，理了下代码，感觉最好的方式找到一个 interface，然后重新实现下，进去了之后发现一堆 internal 依赖，拆不出来
1505205279788462081 2022-03-19 15:31:18 +0000 <ringsaturn_me> Mongo 的 Monitor  https://t.co/SkE2amIrqA 功能并不能和 tracing 结合起来  demo 见  https://t.co/S8uYbKOKC6  实际上能监控到的事件是和 Mongo 内部关系比较大的，对于正常的业务代码而言这些事件用处不是很大
1503723941377966080 2022-03-15 13:25:00 +0000 <ringsaturn_me> 林原惠美当年用三无声线给 EVA 录的歌曲真是让人沉迷
1503701549834719234 2022-03-15 11:56:01 +0000 <ringsaturn_me> 赛百味新上的腌辣椒好辣
1503410991937196032 2022-03-14 16:41:27 +0000 <ringsaturn_me> Go 里弄个二进制命令行程序还挺方便的   https://t.co/CE75rlSvnz
1502993246267768837 2022-03-13 13:01:28 +0000 <ringsaturn_me>  https://t.co/pJZQGwm4wS  🤔
1502843819766972419 2022-03-13 03:07:42 +0000 <ringsaturn_me> 教育国外开发者开源项目里使用的地理信息数据要符合中国的领土主张是我最近这段时间看到的最奇葩的事情。
1502484752376680448 2022-03-12 03:20:54 +0000 <ringsaturn_me> 鼻炎季开始了
1501881871890001930 2022-03-10 11:25:16 +0000 <ringsaturn_me>  https://t.co/3IH78R1ijG
1501169017494532100 2022-03-08 12:12:38 +0000 <ringsaturn_me> 心血来潮做了个烤牛腩，好难吃
1500467936707809280 2022-03-06 13:46:48 +0000 <ringsaturn_me> 地铁站里招聘广告密度有点大:  脉脉，直聘，猎聘，51，智联
1499940807432110083 2022-03-05 02:52:10 +0000 <ringsaturn_me>  https://t.co/8SH2RtVXfg
1499783320028135425 2022-03-04 16:26:22 +0000 <ringsaturn_me> 半夜给我看这个广告……  https://t.co/dHYEhCSX9A
1499738770182053897 2022-03-04 13:29:21 +0000 <ringsaturn_me> 鸡翅还是新鲜的烤起来好吃
1499228507729133570 2022-03-03 03:41:45 +0000 <ringsaturn_me> 这位大仙同一天在另一个仓库干了同样的事情  https://t.co/Ofx5dC6Vr8
1499222192202006528 2022-03-03 03:16:39 +0000 <ringsaturn_me> 1. 这个依赖是一个间接依赖，被大量的 Web 框架服务使用 2. 2021-11-06  https://t.co/FqMB8E1C3q 提交了代码，当天合并进 master 3. 2022-02-17 release  https://t.co/zy5APr4ZXJ
1499220752544927744 2022-03-03 03:10:56 +0000 <ringsaturn_me> 小版本放了个 breaking change  https://t.co/G8lNJfNDH1
1498886278250569728 2022-03-02 05:01:51 +0000 <ringsaturn_me> 微信最缺的权限就是「允许对方把我拉到群聊」。
1497892030898642946 2022-02-27 11:11:04 +0000 <ringsaturn_me> 给乌克兰红十字会捐了点  https://t.co/ErNA2zxmzz
1497409563083292672 2022-02-26 03:13:55 +0000 <ringsaturn_me>  https://t.co/TR17BUzKgL  干实事的创业公司还是会慢慢出现的
1497229865531052033 2022-02-25 15:19:51 +0000 <ringsaturn_me> - 气象本身需要的数学和物理背景知识很庞大 - 业务运行需要的代码开发量也很大，特别是最底层的数值计算还是 Fortran 实现的 - 综合下来不仅要会数值计算，还得能搞明白物理原理，并且用高效的代码实现出来
1497209412913864706 2022-02-25 13:58:35 +0000 <ringsaturn_me> 微物理过程这么复杂  https://t.co/SGXYmuhgwz
1496783387180212224 2022-02-24 09:45:43 +0000 <ringsaturn_me> 盒马的半成品算是拯救我，照着说明操作就有比较正常的菜了。想起来前几天心血来潮发明了咖喱乌冬面条汤这个菜品。
1495742380510793728 2022-02-21 12:49:07 +0000 <ringsaturn_me> 和行业属性相关的实现思路还是得多看看国内外的产品怎么做的，才会发现之前是有多么闭门造车。
1495418851630403584 2022-02-20 15:23:32 +0000 <ringsaturn_me> 瓦片图的基本路子清楚了，还差切割数据出图
1492508364558921731 2022-02-12 14:38:18 +0000 <ringsaturn_me> 莫名好好笑  https://t.co/jAZa8NuZ1D
1492456634165039107 2022-02-12 11:12:44 +0000 <ringsaturn_me> 当年在北京四合院里看的展览，按照今天的大环境应该是办不了了   https://t.co/D7HBlPe6mv
1492161351229140993 2022-02-11 15:39:23 +0000 <ringsaturn_me> @imwithpanda yes, use lng is very clear to recognise what is means compared to lon.  Also which order do you prefer: lng,lat which often used in GeoJSON standard and Mongo database, or lat,lng which often used in weather&amp;maps API?
1491420939871223808 2022-02-09 14:37:15 +0000 <ringsaturn_me> 这半年来每次以为某个内部系统性能优化到头的时候，就会出一次/半次小规模事故，发现边缘情况下的瓶颈点，优化掉，性能提升一截。
1489144033456832514 2022-02-03 07:49:39 +0000 <ringsaturn_me> 发现 placekey 的 API 接口限速、开发者后台调用量统计全是用 Kong 实现的   https://t.co/janVMWFq2W  https://t.co/s5jX9xEkGi
1489143692694802439 2022-02-03 07:48:17 +0000 <ringsaturn_me> 还有调用量统计功能   https://t.co/kBTew24WKV
1489122354919792641 2022-02-03 06:23:30 +0000 <ringsaturn_me> Kong 这个限速很好用的样子  https://t.co/4Dw2S9rjo6
1488905736172314626 2022-02-02 16:02:44 +0000 <ringsaturn_me> 哦，一下子明白了网上查资料看到的「极海快码」的工作逻辑，和 PlaceKey 类似。  感觉用 Uber H3 搞一个类似的不是很难，最高分辨率能到 0.9 平米？
1488686136621170688 2022-02-02 01:30:08 +0000 <ringsaturn_me> 其他固定分辨率场景参照这个优化存储空间提升应该很大   https://t.co/izluqUfdNR  https://t.co/6B6jGyAWwr  https://t.co/Us5Q6W1UUh
1488533449300398089 2022-02-01 15:23:24 +0000 <ringsaturn_me> 移植到 Go： Geo &lt;-&gt; Placekey 实现了   https://t.co/CE75rlAUw1
1488492743131385857 2022-02-01 12:41:39 +0000 <ringsaturn_me>  https://t.co/bOTLUmeWZ9  https://t.co/MHRT3fx4fE
1488460765694771200 2022-02-01 10:34:35 +0000 <ringsaturn_me> 还有一些 H3 文档不会介绍的操作，比如在固定分辨率的情况下，H3 index 可以被减小到一个小很多的整数上，降低存储的体积，看起来也更清爽。  PlaceKey 的 Where part 就是这么操作的，并且更近一步，将一个 H3 Index 大整数最终处理成9个字符。
1488457673838370816 2022-02-01 10:22:18 +0000 <ringsaturn_me> Uber H3 的编码逻辑直接「看」肯定会不明白为什么这么设计，参考下在 H3 基础上做的的 PlaceKey 的源代码和白皮书，编码里各个部分的「实际」用途多少能明白些。
1488170269491757056 2022-01-31 15:20:15 +0000 <ringsaturn_me> 看起来方便些的仓库   https://t.co/4yN3aXIFIN
1487810238317498371 2022-01-30 15:29:37 +0000 <ringsaturn_me> 写了个下载脚本  https://t.co/5WRmKK1sFB  #loudmurmurs #小声喧哗  RSS 完整的 XML 可以存一份，里边还有些参考资料。
1487794908379238401 2022-01-30 14:28:42 +0000 <ringsaturn_me>  https://t.co/2yvlXbALaP  这两年要告别多少东西
1486715965459275777 2022-01-27 15:01:22 +0000 <ringsaturn_me>  https://t.co/MMM4aYRIny
1485649185848569856 2022-01-24 16:22:22 +0000 <ringsaturn_me> @GIA917229015 想起了一个 Python 项目  https://t.co/GSUywg8OXW
1485266779152982021 2022-01-23 15:02:49 +0000 <ringsaturn_me> COS 男装打折时是真便宜
1485193541433585664 2022-01-23 10:11:48 +0000 <ringsaturn_me>  https://t.co/RLNDK2ZOlg  两年没动的博客今年要办一次家了。
1485166196475719680 2022-01-23 08:23:08 +0000 <ringsaturn_me> 这些年买的最值的软件，就算转订阅制了，买断版用户任何权益都没受影响：  - @dayoneapp - @mindnode   - Sky Guide @FifthStarLabs   还有 @alfredapp Mega License
1485097692359688200 2022-01-23 03:50:56 +0000 <ringsaturn_me> 感觉 Ray/Dask 能解决目前生产环境遇到的离线计算任务内存和 CPU 需求高的问题。
1484716429199163393 2022-01-22 02:35:56 +0000 <ringsaturn_me> 这个世界上还有凌晨反馈 bug 的公司，反馈的问题、反馈的时间、反馈的过程都隐隐透露出一丝丝诡异。  说不清楚是开发的能力问题，还是流程制度问题。
1483840994865205252 2022-01-19 16:37:16 +0000 <ringsaturn_me> Mongo 官方弄了个 proxy 工具   https://t.co/PQfflR5gkM
1483618451700989954 2022-01-19 01:52:57 +0000 <ringsaturn_me> Python 两个重要的 JSON 库：UJSON，ORJSON。  前者用 C 写的，虽然仓库已经转移给社区，但是核心的 C 开发为止后继无人；后者 Rust 写的，Maintainer 目前不怎么合并社区的 PR 了。
1483037604136517634 2022-01-17 11:24:52 +0000 <ringsaturn_me> 曾经手写插值算法的我已经看不懂切比雪夫多项式了
1482236930204987396 2022-01-15 06:23:17 +0000 <ringsaturn_me> 用的工具是 @unfoldedinc
1482234904402227201 2022-01-15 06:15:14 +0000 <ringsaturn_me> H3 的 diff 可视化做得真好  https://t.co/spRGdbwQHN
1482000382637137923 2022-01-14 14:43:20 +0000 <ringsaturn_me> 谢天谢地 xarray 提供了降分辨率的方法，debug 的目标文件从 7G 降低到了 200MB。   https://t.co/nhLd1pdX8F
1481981620013854725 2022-01-14 13:28:46 +0000 <ringsaturn_me> 在自己电脑上跑了一个全球1公里分辨率图片处理，最简单的预处理吃了 10G 内存。。。
1481613288660439043 2022-01-13 13:05:09 +0000 <ringsaturn_me> 避免吃屎一般分析接口的方法是到这里，然后找到对应的 SDK 安装位置。各个产品的文档可能压根就没写   https://t.co/A0j6pVnEuj
1481611846616752132 2022-01-13 12:59:25 +0000 <ringsaturn_me> SDK 懒得吐槽了，要是没有两年前啃别的项目代码锻炼的心态应该已经崩了。
1480927295535734793 2022-01-11 15:39:16 +0000 <ringsaturn_me> 左侧的数据曲线简直不要太熟悉   https://t.co/2EpkjP3wQM  https://t.co/NjlZLteje8
1479492586481934338 2022-01-07 16:38:14 +0000 <ringsaturn_me> 尝试做了一个烤香蕉，不太好吃……
1477574909887119360 2022-01-02 09:38:05 +0000 <ringsaturn_me> Google 里搜索 "Celery Instagram" 提示的第一个词是 "jucie"，才还有芹菜汁这种饮料。
1477558709572468736 2022-01-02 08:33:42 +0000 <ringsaturn_me>  https://t.co/klY5o4zZ7d
1472247588531613697 2021-12-18 16:49:12 +0000 <ringsaturn_me> 太可怕了这玩意
1470407504152563718 2021-12-13 14:57:22 +0000 <ringsaturn_me> 不知道多少次在 22 点至 23 点这个夜深人静无人打扰的时间段上写出了各种诡异问题的解决方案。
1470019855793278976 2021-12-12 13:16:59 +0000 <ringsaturn_me> Tile38 里地理相关的功能该有的都有了，只是缺少可视化的调试工具，似乎可以写个小 debugger。
1469164716593680385 2021-12-10 04:38:58 +0000 <ringsaturn_me> @Stapx_Happy 美国的龙卷风数据存档
1469119417334124546 2021-12-10 01:38:58 +0000 <ringsaturn_me> 北美这群爱好者真是太强了
1468922561249509381 2021-12-09 12:36:44 +0000 <ringsaturn_me> 实习生弄了个预计算功能，原来平均60毫秒的功能被优化到了平均6毫秒。
1466379436651999237 2021-12-02 12:11:16 +0000 <ringsaturn_me> @liluoliluo @CaiyunApp 也许可以把小梦加到天气 App 里。。。
1466270241806192642 2021-12-02 04:57:22 +0000 <ringsaturn_me> 难以置信  https://t.co/ZTUl8DDQJP
1465691618174898184 2021-11-30 14:38:07 +0000 <ringsaturn_me> 键盘没法用电池供电了，只能用数据线充电顶着。  看来又要破费了。
1465012622575775745 2021-11-28 17:40:02 +0000 <ringsaturn_me> 2021 年能让我顺利中间人攻击抓包看流量看接口的 App 才是好 App。
1464549864579031047 2021-11-27 11:01:12 +0000 <ringsaturn_me> 想起来之前某 Python 项目的测试文件都是随机生成的 MD5，某个测试 B 在某一天添加之后导致无关测试文件 A 总是失败，但是单独运行没有问题。查了半天发现是状态没有清理并且测试是乱序运行的，B 修改了一个全局变量被 A 读取之后导致余下的业务逻辑结果和之前不一致。
1464542361384460289 2021-11-27 10:31:23 +0000 <ringsaturn_me> 发现可以用 sync.Once 编排有先后顺序和依赖关系的测试
1462809642484994050 2021-11-22 15:46:11 +0000 <ringsaturn_me> 数月前买了 Goland License 之后出了 bug，死活找不到我的 1.17 SDK，内置的安装也失败。  昨天试了下更新软件，就好了。。
1461340701728202760 2021-11-18 14:29:08 +0000 <ringsaturn_me> 开了个有点暗黑的项目  https://t.co/Xnkcn4pjSQ
1460787970399555586 2021-11-17 01:52:46 +0000 <ringsaturn_me> 翻到了一个几年前的 blog  https://t.co/LvFac2SC9F  说 ObjectId 和机器标识无关了，翻了眼最新的官方文档和 Go 的实现，果然是：   https://t.co/ceNNkJEhd0   https://t.co/ZY914KDcfs
1459884571802042373 2021-11-14 14:02:59 +0000 <ringsaturn_me> 明白「人活着就是为了樱岛麻衣」这句话的意思了。
1459776823139594246 2021-11-14 06:54:50 +0000 <ringsaturn_me> @changwei1006  https://t.co/mzMmFxabMh  不过官方文档确实弱化了这么一层功能，刚开始用的时候一头雾水，后来才知道加 tag 就什么都解决了
1459776212771827713 2021-11-14 06:52:25 +0000 <ringsaturn_me> @changwei1006 我记得 cursor decode 时传入的 struct 可以带 bson 的 tag？
1459507864112746499 2021-11-13 13:06:05 +0000 <ringsaturn_me> Go 的 Redis 客户端已经有 OpenTelemetry 支持了   https://t.co/21S1e5Nrfy
1459471379078647812 2021-11-13 10:41:07 +0000 <ringsaturn_me> 越来越多的项目用  https://t.co/RUsCu2qdHJ 做开发者文档了，看着还不错
1459383900594008066 2021-11-13 04:53:30 +0000 <ringsaturn_me> Go 里用过  https://t.co/PWHZm2KyvX 体验不错
1458610623877505024 2021-11-11 01:40:47 +0000 <ringsaturn_me> Proto 定义 HTTP 接口之后用 protoc-gen-openapiv2 生成 OpenAPI 文件，把文件绑定到某个路由下，再加一个 swagger handler 就能渲染 API 文档了，全程不用搞 Go 的其他解决方案里的各种注释标记。
1457520767504166912 2021-11-08 01:30:05 +0000 <ringsaturn_me> 才知道 MongoDB 还有自己的设计系统网站  https://t.co/Ai3mUCa6Yp
1456993723192000515 2021-11-06 14:35:47 +0000 <ringsaturn_me>  https://t.co/4XX6KE1xIE
1455191183592812544 2021-11-01 15:13:08 +0000 <ringsaturn_me> 为了看到这个神奇的场面特意去看了这部作品。  小林家的龙女仆S E09 片头曲之后  https://t.co/A7UHYKKsdq  https://t.co/sNjkO0XYys
1454757335688044549 2021-10-31 10:29:11 +0000 <ringsaturn_me> 这本书不错  https://t.co/TdkfLRYKOm
1454441729973579781 2021-10-30 13:35:05 +0000 <ringsaturn_me> 意外得到了一个病毒/木马文件样本，没想到头几位 "4D5A90000300000004000000" 能直接明文搜索到  https://t.co/9wf3TaMfOM  https://t.co/PEtwbQHRQg
1454414576234086400 2021-10-30 11:47:11 +0000 <ringsaturn_me> 不过 OCR 的效果远没有 iText 好，比如多行文本合并这种。   https://t.co/4gHaTt5hAQ
1454365616937132038 2021-10-30 08:32:38 +0000 <ringsaturn_me> 就连 Safari 浏览推文里的图都直接被 OCR 支持了  https://t.co/jIMQdPrlp7
1454347222850568200 2021-10-30 07:19:33 +0000 <ringsaturn_me> macOS Monterey 增加实况文本的同时，似乎顺便恢复了预览的时候从纯文本文件里拷贝文字的功能。
1452149716058140679 2021-10-24 05:47:26 +0000 <ringsaturn_me> 星巴克的地理围栏推送功能看来是用极光做的，甚至是在后台没有访问定位的情况下运行的  https://t.co/t2O7T4rIoD
1451359513433444368 2021-10-22 01:27:27 +0000 <ringsaturn_me> 阿里云青岛区至今没有 ACK ..
1451194349283201045 2021-10-21 14:31:09 +0000 <ringsaturn_me> 看着 Go 里解析 nc 文件的逻辑  https://t.co/bJfz499YBa  Python 里的 xarray 还是方便些  https://t.co/qWqcL2ZlYF
1450836323036585988 2021-10-20 14:48:29 +0000 <ringsaturn_me> @__Tachikoma__ @mockee 对开发来说熊聊 bot 比飞书强太多了
1450469341854674949 2021-10-19 14:30:14 +0000 <ringsaturn_me> 南方住了一个月回北京好不适应
1449339663404048387 2021-10-16 11:41:17 +0000 <ringsaturn_me> v0.1.2 增加了一次 API 调用先获取经纬度所在时区，再生成当地当天0时时间戳二次调用 API，这样即便是当地晚上获取的数据序列也是完整的了。   https://t.co/fbza8IoZV6
1448977437748989962 2021-10-15 11:41:56 +0000 <ringsaturn_me> @michaelwong666 不对，历史还挺复杂的样子  https://t.co/4lOXXugakX
1448977255787417600 2021-10-15 11:41:13 +0000 <ringsaturn_me> @michaelwong666 我记得是福建人翻译的
1448585239987585031 2021-10-14 09:43:29 +0000 <ringsaturn_me> 例行更新下   https://t.co/HQWYOBoH9O 支持了短临和小时级别自然语言描述  https://t.co/GPnqKfViNX
1448311411570974721 2021-10-13 15:35:23 +0000 <ringsaturn_me> 删掉了之前的 tag 从头开始 v0.1.0   https://t.co/k4UhjI8Sux
1448205112682299396 2021-10-13 08:32:59 +0000 <ringsaturn_me> 我们在招人～
1448099518742884352 2021-10-13 01:33:24 +0000 <ringsaturn_me> slots 数据也修了  https://t.co/a9BXfPHikX
1448098477175492611 2021-10-13 01:29:15 +0000 <ringsaturn_me> 修改了坐标解析的逻辑，之前是彩云的 lng,lat 但是原始配置文件时 lat,lng  更新最新版的话需要改 wegorc   https://t.co/FAVcUrFLD7
1447959981672710144 2021-10-12 16:18:56 +0000 <ringsaturn_me> 上游仓库近几年的 PR 都没被处理过，感觉可以找一些 cherry-pick 进来
1447946329997516807 2021-10-12 15:24:41 +0000 <ringsaturn_me> @Stapx_Happy 我 fork 的那份 master 分支就能用，但还是初级的 demo，所以功能不完整。
1447925383920300045 2021-10-12 14:01:27 +0000 <ringsaturn_me> 还不是很完整，但基本能看了。上游补丁  https://t.co/7bMuH3t68r
1447923949908672523 2021-10-12 13:55:45 +0000 <ringsaturn_me> 两年前死活看不明白，两年后一小时弄出来   https://t.co/k4UhjIqtT7  https://t.co/Zbvke3W1hW
1447746571156672515 2021-10-12 02:10:55 +0000 <ringsaturn_me> @virushuo 之前用的是  https://t.co/MyuqQ447Lb
1447726675429523458 2021-10-12 00:51:51 +0000 <ringsaturn_me> @changwei1006 青岛也观察到了这个现象
1447445960456499203 2021-10-11 06:16:23 +0000 <ringsaturn_me> 咖啡馆来了一群 AirPods Max 降噪功能都挡不住的人
1445694009276387328 2021-10-06 10:14:46 +0000 <ringsaturn_me>  https://t.co/6e3HqsSWb1
1445616501726220292 2021-10-06 05:06:46 +0000 <ringsaturn_me> 经济学人 商论 的后端文章数据库似乎是 MongoDB
1445373235751645191 2021-10-05 13:00:07 +0000 <ringsaturn_me> 纯静态的 proto 规范确实很适合工程实践，内部实现爱怎么瞎搞就怎么瞎搞，暴露的接口和数据格式定死了能少很多脏活。
1445060429588287503 2021-10-04 16:17:08 +0000 <ringsaturn_me> swagger 似乎没有直接的 ui 集成方案，有个实现思路，但是看起来不是很优雅，依赖了6年前 hack 出来的一个伪模版文件
1445054196848357387 2021-10-04 15:52:22 +0000 <ringsaturn_me> 发现了一个诡异的地方：HTTP 服务启动之前要先启动 RPC 服务，然后创建一个 conn 连接刚刚启动的 RPC。再用这个 conn 注册 HTTP 的 mux 最后再启动。
1444664310588837888 2021-10-03 14:03:06 +0000 <ringsaturn_me> Demo 见  https://t.co/bdyNFDetcA
1444654474153267202 2021-10-03 13:24:01 +0000 <ringsaturn_me> 确认了一下，gRPC Gateway  项目支持将 gRPC 预定义的 error 转义成 HTTP Status Code。
1444571007075770370 2021-10-03 07:52:21 +0000 <ringsaturn_me> 顺着这篇文章  https://t.co/BOSzWuVQJi 往里查发现了这两个  -  https://t.co/xaaFBE7QcX -  https://t.co/DBNd5A2HU8  gRPC 的 error 很有意思
1443930684758712329 2021-10-01 13:27:56 +0000 <ringsaturn_me> 读到了这么一段：  &gt; 为了降本增效，继续加强IT成本意识，京东集团备战架构师委员会把CPU秒级峰值利用率持续低于15%定为低CPU利用率线上事故。   https://t.co/SCnRApfsvZ
1442885819002331138 2021-09-28 16:16:01 +0000 <ringsaturn_me> 目前似乎还没有针对 rdb 文件生成 key 的数量&amp;体积分析的工具，比如生成类似 ncdu/饼状图/火焰图
1442503841421815822 2021-09-27 14:58:10 +0000 <ringsaturn_me> @sodaumaru Hi 考虑下我们吗？公司还有猫猫   https://t.co/q5nTePsgaY
1442163849751236613 2021-09-26 16:27:10 +0000 <ringsaturn_me> 日语里的「仰天情报」是个啥意思？
1441593962213482496 2021-09-25 02:42:38 +0000 <ringsaturn_me>  https://t.co/ZVmWTzjy7S
1439264439480434697 2021-09-18 16:25:57 +0000 <ringsaturn_me>  https://t.co/qxRl4BfvGf
1439263960579018752 2021-09-18 16:24:03 +0000 <ringsaturn_me> 第一次知道那个神奇的地方还是电子书  https://t.co/ipLLWbGRYS
1437624380033437700 2021-09-14 03:48:56 +0000 <ringsaturn_me> 两个我认为登峰造极的项目  -  https://t.co/NEHdj0s91K -  https://t.co/my2Xzd9Dxc
1436364461741207556 2021-09-10 16:22:28 +0000 <ringsaturn_me> 美国人民都是直接通过看雷达回波来观测龙卷风吗。。。   https://t.co/h0uR5H1zBR
1435973963939598339 2021-09-09 14:30:46 +0000 <ringsaturn_me> 背景：Go 1.17 上用 Gin 某些情况无法启动，但是 1.16 直接编译运行一切正常。
1434557953411936266 2021-09-05 16:44:03 +0000 <ringsaturn_me> 是我知道的 Sentry，社区贡献的功能性代码很少得到 review 和合并   https://t.co/ngjzASN0AS
1434511624522526724 2021-09-05 13:39:57 +0000 <ringsaturn_me> 把 Gin 实现的迁移到了 Fiber 上，Fiber 的 Locals 机制有些不太理解，其他还算正常。   https://t.co/C6lyjqoMWW
1434498256541650948 2021-09-05 12:46:50 +0000 <ringsaturn_me> 发现 Fiber 的设计更加合理些  https://t.co/4O98k3FuCT
1434363707782406145 2021-09-05 03:52:11 +0000 <ringsaturn_me> 还学到了一个编码  https://t.co/Nd4lQOJrJ9
1434361747004035074 2021-09-05 03:44:24 +0000 <ringsaturn_me> 后续：GeoIP 的也加了一个，直接写入 ctx ，用的时候判断下有没有就好了  -  https://t.co/W8RVD3hDzO -  https://t.co/OLWOfpQp3Y
1434166913135878145 2021-09-04 14:50:12 +0000 <ringsaturn_me> Gin 修改 response header 的 demo  https://t.co/eSc1M44P3k
1434129191922913282 2021-09-04 12:20:18 +0000 <ringsaturn_me> 意外发现集成了一个 timeout middleware 就能随意改 header，最后发现是 writer 的问题，需要实现一个 ResponseWriter 然后替换掉 gin.Context 里的。  -  https://t.co/73CqKF5uLy -  https://t.co/rxcqhWblpH -  https://t.co/Jcpx8sMr63
1433240583087132685 2021-09-02 01:29:17 +0000 <ringsaturn_me> 时间序列数据的样式调得不错  https://t.co/26eSCyR9vS
1433238708099043328 2021-09-02 01:21:50 +0000 <ringsaturn_me> 可视化效果很好  https://t.co/q50zPFRN4t
1433076813018779655 2021-09-01 14:38:32 +0000 <ringsaturn_me> 当年也是惊到   https://t.co/3O1Nj1UZnz
1432954358891614212 2021-09-01 06:31:56 +0000 <ringsaturn_me> 本地直接删库跑路解决了   https://t.co/b498aO6hmf  https://t.co/1Hq3NE38SV  https://t.co/AqQVABoxwg
1432877347930185732 2021-09-01 01:25:55 +0000 <ringsaturn_me> 看起来是个模版  https://t.co/AuewBwQSdA
1432299968631431173 2021-08-30 11:11:38 +0000 <ringsaturn_me> @dinehq 的设计是真的非常棒啊
1432015926522626053 2021-08-29 16:22:57 +0000 <ringsaturn_me> 风不小  https://t.co/awyOb2dE3e
1429056265842429953 2021-08-21 12:22:19 +0000 <ringsaturn_me> 简中赛博坟场：一篇只依稀记得标题部分词语的文章只剩下 GitHub 上的备份能直接访问了。  https://t.co/1yQtMgLyCY
1428957827775623173 2021-08-21 05:51:09 +0000 <ringsaturn_me> Kindle 上的杂志阅读体验好糟糕
1428927948422205442 2021-08-21 03:52:25 +0000 <ringsaturn_me> 路径依赖是个很可怕的东西
1427150339040440323 2021-08-16 06:08:50 +0000 <ringsaturn_me> @aftergreatest 根据站点数据插值出图的展示策略看起来不太对   https://t.co/HriXydWEnW
1424660773733756931 2021-08-09 09:16:12 +0000 <ringsaturn_me> FastAPI 很多机制设计非常不好用，虽然新项目在用 FastAPI，但是其内置的大多数机制是不太想在生产环境使用的。  糟糕的 Pydantic 的设计也导致了一堆问题，要通过 ugly 的 patch 支持一些数据结构  -  https://t.co/GhNtACmZRt -  https://t.co/iOVensXjlk
1423882061874569217 2021-08-07 05:41:52 +0000 <ringsaturn_me> 在把一堆 Go 代码翻译到 Python 上，好像难度不大。  稍微麻烦的是原来传指针的地方，换成 index 就好了。
1422915249091485697 2021-08-04 13:40:06 +0000 <ringsaturn_me> 及格线的设计是干净大方，有足够的留白。
1422567267858927620 2021-08-03 14:37:21 +0000 <ringsaturn_me>  https://t.co/JD58GgNcgd
1422512385122729984 2021-08-03 10:59:16 +0000 <ringsaturn_me> 可能大多数人都只觉得做完需求就算完成了吧。
1421808193089376261 2021-08-01 12:21:03 +0000 <ringsaturn_me> 再也打不开了。
1421725972148088834 2021-08-01 06:54:20 +0000 <ringsaturn_me> The Magic of Boredom  &gt; it was a rare treat in being able to build simple solutions to serve user needs.  https://t.co/rWtmZxKoyp
1419154951838699522 2021-07-25 04:38:01 +0000 <ringsaturn_me>  https://t.co/5WIUsS5CyC
1419153652057444362 2021-07-25 04:32:51 +0000 <ringsaturn_me>  https://t.co/ZttbGBn01k
1419152784729931776 2021-07-25 04:29:25 +0000 <ringsaturn_me>  https://t.co/THHaVohMwn
1418046535871336450 2021-07-22 03:13:34 +0000 <ringsaturn_me> 另一个压测  https://t.co/G957HN4dTs
1416723076444684291 2021-07-18 11:34:37 +0000 <ringsaturn_me> 付费套路  https://t.co/QX3eYLGvHH
1411357193178271746 2021-07-03 16:12:31 +0000 <ringsaturn_me> 数据上看 iOS 15 的天气数据中国地区只有 AQI 来自和风，剩下还是 TWC 的。
1411158621463879681 2021-07-03 03:03:28 +0000 <ringsaturn_me>  https://t.co/bVWcKY5kze
1411158475900522501 2021-07-03 03:02:53 +0000 <ringsaturn_me> 一段神奇的对话  https://t.co/loALMb6XqT  https://t.co/VP3KPM7pGG
1410629711982522371 2021-07-01 16:01:46 +0000 <ringsaturn_me> 几个月了也没想好怎么解决服务遇到的这个报错  https://t.co/SghgbFX3xS
1410102731700719619 2021-06-30 05:07:44 +0000 <ringsaturn_me> 等了好久
1409750518730084357 2021-06-29 05:48:10 +0000 <ringsaturn_me> 某厂 Go 写的 SDK 编译起来比 Rust 还慢。。。
1409175151279689733 2021-06-27 15:41:51 +0000 <ringsaturn_me> 有趣的技术分享还是有门槛的，Grab 当年地理计算的相关分享我觉得就是有趣的，在用 Go 解决实际问题  https://t.co/dnRi62nk9c  还有今年 Gopher China @dlsniper 做的 Build a home monitoring system with Go 也很有意思。  剩下太多的分享其实就很无聊了，XXX平台 YYY框架……
1408239412211634182 2021-06-25 01:43:34 +0000 <ringsaturn_me> 那年夏天差点去买个 Windows Phone
1408047256041709570 2021-06-24 13:00:00 +0000 <ringsaturn_me> 熊聊 @BearyChat 要关闭了
1407354462595817475 2021-06-22 15:07:05 +0000 <ringsaturn_me> 嵌入结构如果想继承一套特殊的 json_encoders 必须在更上层引入 hack  https://t.co/MbbTB0iHll
1407350770673070083 2021-06-22 14:52:25 +0000 <ringsaturn_me>  https://t.co/KJ1fD1uLsS
1407350640901300228 2021-06-22 14:51:54 +0000 <ringsaturn_me> 不太理解 FastAPI 既然要将整个类型标注构建在 BaseModel 上，又为何不兼容 BaseModel 内部的 jsonable_encoder   https://t.co/3CoRlqNVB6  https://t.co/mGyZsOL4JA
1407347517281476609 2021-06-22 14:39:30 +0000 <ringsaturn_me> 为什么要用 dataclass 呢，干净轻量，orjson 原生支持，不用引入不必要的 hack，但是不被 FastAPI 良好支持（毕竟用了 BaseModel），各种兼容问题导致总是要引入很多不必要的逻辑来兼容各种框架  BaseModel 的 orjson 支持暂时还没合并  https://t.co/O08jEBSu7m
1407347514198704147 2021-06-22 14:39:29 +0000 <ringsaturn_me> Pydantic 默认不允许下划线开头的字段，导致和 Mongo 处理的代码会出现很多来回折腾的问题，比如 `_id`，比如为了让 Pydantic 支持 ObjectId 要引入很多 hack，而这些 hack 未必会被 FastAPI 识别到，所以又要继承 __init__ 然后在里边更改类型
1407347511002599431 2021-06-22 14:39:28 +0000 <ringsaturn_me> 如果 Post Body 是用 dataclass 定义的，那么想正常解析道就需要补上 `form: Form = Body(...)` 否则 form 是按 URL 参数解析的  而且 dataclass 定义的 request body 似乎只能在 POST 请求中被处理，PUT/PATCH 有问题  如果有复杂嵌套结构也会有解析失败或变成词典，甚至直接初始化的时候 KeyError
1407344018636300305 2021-06-22 14:25:35 +0000 <ringsaturn_me> Pydantic 的 BaseModel 设计真的一塌糊涂，FastAPI 的 typing 及文档生成是在 BaseModel 上二次封装的，继承了所有的缺点。
1406647287472791559 2021-06-20 16:17:02 +0000 <ringsaturn_me> 挺好的一个项目，似乎不太活跃了   https://t.co/neoMEdkFEJ
1404043108552044563 2021-06-13 11:48:57 +0000 <ringsaturn_me> 以前看到有意思的 iOS App 能直接 MITM 看接口格式和数据，现在不同往日了：  - 根据 JWT 服务端返回 HTTP 304 防重放 - 客户端嵌入证书，服务端校验 - 接口用 WebSocket - 接口用各种 RPC - ...
1402640199985729536 2021-06-09 14:54:18 +0000 <ringsaturn_me> #iOS15  https://t.co/XnaF4FHIl0
1401110796537536514 2021-06-05 09:36:59 +0000 <ringsaturn_me> @viticci  https://t.co/79uBMmDNSl  https://t.co/jbldJVOcEE
1400837553213763587 2021-06-04 15:31:13 +0000 <ringsaturn_me> brew 又把环境搞挂了，Vim, Ruby, Python, Lua .... 废了一大片
1400690937412558852 2021-06-04 05:48:37 +0000 <ringsaturn_me>  https://t.co/b2TTty7eNo
1400099680860590081 2021-06-02 14:39:11 +0000 <ringsaturn_me> 能不能好好说话  https://t.co/85yQUN68KW
1396142442823385088 2021-05-22 16:34:32 +0000 <ringsaturn_me> 距离中国推出类似于 401(k)  的东西快了   https://t.co/02OBn61fAA  #podcast
1396129006211067906 2021-05-22 15:41:08 +0000 <ringsaturn_me> Proto 未知的玩法肯定还有很多。  科学计算相关的似乎就是 Apache Arrow 的天下了。
1396128258014420994 2021-05-22 15:38:10 +0000 <ringsaturn_me> Proto 已知的玩法：  - 数据字段的文档生成  https://t.co/2Kmx6v9QMZ - 用 gRPC-gateway 实现 Proto 文件同时定义 gRPC 和 HTTP API  https://t.co/vlXt6yjkc5 - 埋点上报  https://t.co/OLQ1429yZ5 - clang-format 格式化 proto  https://t.co/q9RjEOtAyF - 配置文件的格式定义  https://t.co/oBsbE9uVdV
1396057850024136706 2021-05-22 10:58:23 +0000 <ringsaturn_me>  https://t.co/L4HCQZu75V
1396031726938312705 2021-05-22 09:14:35 +0000 <ringsaturn_me> proto 生成 Markdown 文档真好使  https://t.co/iZrZvCWmro
1394929377977061377 2021-05-19 08:14:14 +0000 <ringsaturn_me> 星野源这个老贼
1394669067189952517 2021-05-18 14:59:51 +0000 <ringsaturn_me> 又来了。。。  https://t.co/0wLOQhnfVL
1394138270603255808 2021-05-17 03:50:40 +0000 <ringsaturn_me> 🤦‍♂️  https://t.co/n8EIKvmevR
1393505163504091138 2021-05-15 09:54:55 +0000 <ringsaturn_me> 且慢自建组合的调仓功能还挺好使的
1392021671821807617 2021-05-11 07:40:03 +0000 <ringsaturn_me> 人生中的三个小时：  supervisor 缺了一行 stopasgroup=true
1391663211833745408 2021-05-10 07:55:40 +0000 <ringsaturn_me> @Stapx_Steve 您看下私信？
1391337806270664709 2021-05-09 10:22:37 +0000 <ringsaturn_me> 这几个月尝试出来的方法   https://t.co/JzFRj8bQ3P
1391061440585375747 2021-05-08 16:04:26 +0000 <ringsaturn_me> 唉  https://t.co/uapUHzOPA8
1390513128710934528 2021-05-07 03:45:39 +0000 <ringsaturn_me> @waylybaye 南华早报报道过一个投入使用的系统   https://t.co/jcXiUqBLam
1389548923933573121 2021-05-04 11:54:14 +0000 <ringsaturn_me> VS Code 写累计几百行的 Go 代码就开始卡的不行，官网买了一年 Goland，解决。
1389468258827259904 2021-05-04 06:33:42 +0000 <ringsaturn_me> 《Unix传奇：历史与回忆（Unix: History and Memoir）》  全书不长，读起来有种武功门派开枝散叶的感觉。  译者 blog  https://t.co/FsYGi6ekxr   https://t.co/kxCxI7xhyQ
1389433600194400260 2021-05-04 04:15:59 +0000 <ringsaturn_me> 这事大致是这样：Python 官方计划引入了一个影响 typing 解析的 breaking change，会导致 Pydantic 及依赖它的 FastAPI 在新版本的 Python 上无法正常处理 typing。然后这些包库开发者就在新版本发布之前开了个 issue 声讨，顺便吸引了一堆人，最终 Python 官方撤回了发布计划。
1388903482522890241 2021-05-02 17:09:29 +0000 <ringsaturn_me>  https://t.co/vUyiFeskUC
1388820734030581764 2021-05-02 11:40:40 +0000 <ringsaturn_me> 豆瓣阅读能仅用 Web 完成大部分操作这一点真是太方便了。
1388734125859692551 2021-05-02 05:56:31 +0000 <ringsaturn_me>  https://t.co/BCq05Ia0tQ
1388333150875492355 2021-05-01 03:23:11 +0000 <ringsaturn_me> 没想到基准税率这么高   https://t.co/32W1F09bFU
1387429998089236480 2021-04-28 15:34:23 +0000 <ringsaturn_me>  https://t.co/BprUEVpkYN
1386360497964941313 2021-04-25 16:44:34 +0000 <ringsaturn_me> 博客质量也很好   https://t.co/8nMEbZpx71
1386002492576571392 2021-04-24 17:01:59 +0000 <ringsaturn_me> 大概是这个效果   https://t.co/KIm8Qa1Dpi
1385961913608146945 2021-04-24 14:20:44 +0000 <ringsaturn_me> 知乎埋点上 probuf 了  https://t.co/XEfVgw7gRs
1385881424444596227 2021-04-24 09:00:54 +0000 <ringsaturn_me> clang-format --style=Google -i xxx.proto   https://t.co/qnkkvNouzl
1385860590309056512 2021-04-24 07:38:07 +0000 <ringsaturn_me> wire 能把 interface 和 struct 绑定起来，太好用了
1385620870840782852 2021-04-23 15:45:33 +0000 <ringsaturn_me>  https://t.co/fQLI6VJJhQ
1382617534399074305 2021-04-15 08:51:22 +0000 <ringsaturn_me> 不是第一次碰到阿里云 Python SDK 依赖的另一些包库没写成  `==`  而是写成 `&gt;=` 导致了依赖无法正常安装的事情。
1381849060865306629 2021-04-13 05:57:44 +0000 <ringsaturn_me> 第一次看到详尽的 Go HTTP 客户端初始化代码文档是在 AWS 上   https://t.co/f0VVfXYgkN
1381809851332919296 2021-04-13 03:21:56 +0000 <ringsaturn_me> Go 的 HTTP2 的实现果然有问题  https://t.co/oKgLyTlZ2a
1381124564114006020 2021-04-11 05:58:50 +0000 <ringsaturn_me> 原来 clickhouse 连地理计算都有了  https://t.co/VWUHqtGlcA
1380182828697100290 2021-04-08 15:36:43 +0000 <ringsaturn_me>  https://t.co/B5Ye4gYUq4
1379248685872074754 2021-04-06 01:44:46 +0000 <ringsaturn_me> 小译翻译文本没啥问题，排版有点问题  https://t.co/M1krCaNYe0
1379248051739451393 2021-04-06 01:42:15 +0000 <ringsaturn_me> Safari 内建的翻译效果还不错   https://t.co/UIDvx2LjAi  https://t.co/erYYoRgSqx
1379102558820519937 2021-04-05 16:04:07 +0000 <ringsaturn_me> 后来 iOS 升级，Shortcuts 引入了一堆 Breaking Changes，导致几十个动作串起来的文章处理无法正常运行，加上工作后也就没时间修了。  今天乱翻资料发现了当时制作的 PDF，还是够精致啊。  整个处理过程的博客草稿还躺在草稿箱里，完成度大约 80%。
1379102556610170880 2021-04-05 16:04:06 +0000 <ringsaturn_me> 我时间比较闲的时候还弄过一个从手机上爬取文章的 Markdown 格式，然后存到 iCloud 目录里。  macOS 上有个 Hazle  脚本 A 监听指定目录然后移动到 iCloud 的另一个目录， 监听对应目录的脚本 B 则会开始用 Pandoc 生成 PDF 打上标签，将 Markdown 和 PDF 存放到不同的目录里。  https://t.co/8UIi9c39zN
1376571082203820032 2021-03-29 16:24:56 +0000 <ringsaturn_me>  https://t.co/AoCxNYBbBN  https://t.co/VWycKis4Zb
1376565885394034689 2021-03-29 16:04:17 +0000 <ringsaturn_me> 终于修复了  https://t.co/4vobTnwoQ8   https://t.co/zKHf30U3dT  https://t.co/9UDN7uXLU5
1375850267980091392 2021-03-27 16:40:40 +0000 <ringsaturn_me> Using Sentry Performance To Make Sentry Performant | Product Blog • Sentry  https://t.co/rFkkDO7b7o
1373976545342021632 2021-03-22 12:35:10 +0000 <ringsaturn_me> Python 的 async，Go 的 context 都很能污染代码
1372393029248577537 2021-03-18 03:42:50 +0000 <ringsaturn_me> 这个方法的超时控制只能控制一部分，能覆盖大多数场景，但还是有个别其它超时会出现
1372009873060233218 2021-03-17 02:20:19 +0000 <ringsaturn_me>  https://t.co/WIG8Z6Kvvr  数据库都可以无状态了
1371289226201894912 2021-03-15 02:36:43 +0000 <ringsaturn_me> 空气质量要素观测值，以及要素对应的空气质量分数，这两个东西还挺迷惑人的。
1370961477750812674 2021-03-14 04:54:22 +0000 <ringsaturn_me> 顺着标准库文档往下翻，还发现了这个方法   https://t.co/ikUmMTTnmJ
1370959112809287688 2021-03-14 04:44:58 +0000 <ringsaturn_me>  https://t.co/Q1Q92QasSy  醍醐灌顶  https://t.co/8OujqZLkc5
1370578294093975552 2021-03-13 03:31:44 +0000 <ringsaturn_me> 比较迷惑的是后台起的 goroutine 如果不幸遇到了很高的延迟就放任那么运行？
1370387535843627008 2021-03-12 14:53:43 +0000 <ringsaturn_me> 学到了一个奇怪的超时控制。。。  https://t.co/v8fb60CNPn
1368060387225038848 2021-03-06 04:46:28 +0000 <ringsaturn_me> 奇怪的知识增加了 &lt;0x0d&gt;
1366204713851490305 2021-03-01 01:52:41 +0000 <ringsaturn_me> &gt; It’s undeniable that Python 3.6 will make Sentry more efficient. After Instagram implemented their 3.6 patch, they noticed a 12 percent CPU savings on Django, and 30 percent memory savings on Celery.
1366204283297828864 2021-03-01 01:50:58 +0000 <ringsaturn_me>  https://t.co/T17yx2a8fy
1365918461910679552 2021-02-28 06:55:13 +0000 <ringsaturn_me> 不知道 Sentry 为啥删除了这篇文章。  去年夏天在折腾 rb 的 Python3 兼容性原来是在升级。  https://t.co/ju7ayg9nBP
1362389590493945861 2021-02-18 13:12:45 +0000 <ringsaturn_me> @danwwang @shen_shiwei 看这个位置应该是日出？
1362047889430614016 2021-02-17 14:34:57 +0000 <ringsaturn_me> Wire 最开始叫 goose，当时的代码还挺简单的实用的。  只对外暴露了一个 `Generate` 的函数。   https://t.co/v5IbZIcoab
1362038887565025280 2021-02-17 13:59:10 +0000 <ringsaturn_me> @GeekPlux @SurgeDebugger 不错，可以手机上运行 App 电脑上进 dashboard 看流量。
1360182093397979137 2021-02-12 11:00:56 +0000 <ringsaturn_me> gRPC 的代码示例也是类似的方式   https://t.co/V17jdToTbQ  https://t.co/BcZlbLKWcr
1360061225690746886 2021-02-12 03:00:39 +0000 <ringsaturn_me> 🤷‍♂️  https://t.co/mP1b2dlIrp
1359522953931542530 2021-02-10 15:21:45 +0000 <ringsaturn_me> 解决 APNS 超时的一个办法是在 AWS 部署代理来发出请求……   https://t.co/lhPPprUMVm
1359395044025790468 2021-02-10 06:53:29 +0000 <ringsaturn_me> 至少标题是对的「有人负责，才有质量」   https://t.co/UCzUqMjFoc
1359156113200054279 2021-02-09 15:04:03 +0000 <ringsaturn_me> 有意思   https://t.co/bvJrW43skM
1355837317332627460 2021-01-31 11:16:21 +0000 <ringsaturn_me> 学到了奇怪的知识  https://t.co/h4Zqe9PLrf
1355480805481451523 2021-01-30 11:39:42 +0000 <ringsaturn_me> @waylybaye 彩云天气考虑下吗？
1355470826309468165 2021-01-30 11:00:03 +0000 <ringsaturn_me> Golang WaitGroup 奇妙的地方  定义  https://t.co/wCGoiK0rOS  计数  https://t.co/gFXEgfEeSv
1353712986863484928 2021-01-25 14:35:01 +0000 <ringsaturn_me> 白天想不明白的限制并发，晚上10分钟就想好了，加一个全局大锁限制并发数，解决。
1352640944315658240 2021-01-22 15:35:06 +0000 <ringsaturn_me>  https://t.co/n6GeEfiGcm
1345746546126516224 2021-01-03 14:59:14 +0000 <ringsaturn_me> 左美标右中标  https://t.co/qCdkelSC2S
1345743206072238081 2021-01-03 14:45:57 +0000 <ringsaturn_me> 总算知道 Golang Web 项目里的数据里连接应当放到哪里做了：一个 struct 持有连接，然后将 API 的定义作为方法。  再也不用全局变量和传递一堆参数了。   https://t.co/LcjAZaDUi5
1345632792848158720 2021-01-03 07:27:13 +0000 <ringsaturn_me> iOS 14 某版本之后加入了由国内天气数据供应商和风天气提供的 AQI 数据。  通过这阵子观察可以判定只有国控站点的数据，省控站的数据 iOS 是没有调用的。  举个例子，北京市通州区就没有国控 AQI 站点，所以 iOS 内建天气应用就没有 AQI 数据。而海淀区，朝阳区有 AQI 数据。  https://t.co/pQHAQ1NMzV
1344879185139912707 2021-01-01 05:32:39 +0000 <ringsaturn_me> AQI 左美标 右中标  https://t.co/XZljE1xUis
1344604339222953987 2020-12-31 11:20:30 +0000 <ringsaturn_me> Golang 里构造可选参数的形式   https://t.co/9OjkywEJpW
1344549353059278851 2020-12-31 07:42:00 +0000 <ringsaturn_me> Python 代码日渐 Golang 化
1343963275063566338 2020-12-29 16:53:09 +0000 <ringsaturn_me> Engineering an H3-based Geospatial Data Platform at Uber   https://t.co/w1RvXaHa8r  https://t.co/NAbGL87UZa
1343739888995164161 2020-12-29 02:05:29 +0000 <ringsaturn_me> Uber H3 不同分辨率对应的大致面积   https://t.co/TruGSDNVN5  https://t.co/egD0LEnWXh
1343579145263968256 2020-12-28 15:26:45 +0000 <ringsaturn_me> Kratos 的限流  https://t.co/wcwxnmlHxp
1343578362854326272 2020-12-28 15:23:38 +0000 <ringsaturn_me> Kratos 的熔断器  https://t.co/DsYM6DDzkx
1342820426976673792 2020-12-26 13:11:52 +0000 <ringsaturn_me>  https://t.co/ksURr4fIIK
1342770438372425729 2020-12-26 09:53:14 +0000 <ringsaturn_me> 新华网的 RSS 依然有效  https://t.co/EXiMOVCMk4
1341003544028037120 2020-12-21 12:52:14 +0000 <ringsaturn_me>  https://t.co/CSgZt9ne0c
1340291434742628353 2020-12-19 13:42:34 +0000 <ringsaturn_me> ???  https://t.co/2v2PL6tVtq
1339919042614685696 2020-12-18 13:02:48 +0000 <ringsaturn_me> GitHub 上看到一个性能特别高的经纬度转时区的库，一看源代码是一个一个 if else 判断的……   https://t.co/iqoI4Tvypq
1339750772712460288 2020-12-18 01:54:10 +0000 <ringsaturn_me> &gt; Shopify was a company initially for American customers, built by German founders, in Canada.   https://t.co/pJt0qPQGl3
1337998986511183872 2020-12-13 05:53:11 +0000 <ringsaturn_me> Golang 读写 npy 文件   https://t.co/GaOKPI8Nas
1337395273367056384 2020-12-11 13:54:15 +0000 <ringsaturn_me>  https://t.co/idljeFpzxl
1336526516310614016 2020-12-09 04:22:07 +0000 <ringsaturn_me> 又一封  https://t.co/u37WyGvlcp
1335593112635232258 2020-12-06 14:33:06 +0000 <ringsaturn_me> 好像这半年里时不时就有开源项目写邮件宣传  https://t.co/35UjDyxOCl
1335128204634288129 2020-12-05 07:45:44 +0000 <ringsaturn_me>  https://t.co/L4OIdpovP5
1334894770859036672 2020-12-04 16:18:09 +0000 <ringsaturn_me> 不知不觉间 Sentry 客户端的默认初始化就是这种形式了  https://t.co/hVBl0y4jQQ
1334683883405643777 2020-12-04 02:20:09 +0000 <ringsaturn_me>  https://t.co/se2HpNPP7N
1334683511777738752 2020-12-04 02:18:41 +0000 <ringsaturn_me>  https://t.co/f2X5fEpSZL
1334683184219312128 2020-12-04 02:17:22 +0000 <ringsaturn_me>  https://t.co/E4iRe32NVB  https://t.co/3pHcvljdPd
1334544127053062145 2020-12-03 17:04:49 +0000 <ringsaturn_me> 才知道有这么多参数  https://t.co/0YoTug9Ler  https://t.co/wJWupgBdxd
1334522476030640128 2020-12-03 15:38:47 +0000 <ringsaturn_me>  https://t.co/l2cNKHJWLm
1334491478362451973 2020-12-03 13:35:36 +0000 <ringsaturn_me> 花了一天时间调好了 Golang 程序优雅退出的逻辑：  1. 阻塞的调用会阻挡退出的过程，触发意外的 bug，CPU 狂飙，被迫 kill -9； 2. 代码逻辑太乱了之后最简单的方式是重写一遍（目前重写4遍了，每一次都能改进一点）； 3. chan+mutex+waitGroup 真好使  Python 的 GIL 锁有些时候还挺安全的……
1333807432917651456 2020-12-01 16:17:27 +0000 <ringsaturn_me> 优雅重启资料:  - 《Unix 环境高级编程》信号一章 - 《SRE Google 运维解密》第20章「跛脚鸭状态」 -  https://t.co/A9kiEde90L - Golang 接收信号并退出的样例  https://t.co/pURskusfKN - 服务注册发现 -  https://t.co/eAKSaTVFDQ -  https://t.co/W4YzaO9iUJ -  https://t.co/SZ6L7pXdwr
1333724379524468737 2020-12-01 10:47:26 +0000 <ringsaturn_me> 好书啊   https://t.co/KCCGrkiN29
1333436354290536461 2020-11-30 15:42:55 +0000 <ringsaturn_me> 只会 Python 的时候不太理解多线程的代码，学了 goroutine 之后反而明白前者的一些设计意图了
1332568403446382595 2020-11-28 06:13:59 +0000 <ringsaturn_me> 一不留神已经知道的就有三个新邮件客户端的  -  https://t.co/ZmRbTo5KNV -  https://t.co/6OLd8YNEGz -  https://t.co/bLoffjLe5w
1332563613681291267 2020-11-28 05:54:57 +0000 <ringsaturn_me> 看起来很有意思  https://t.co/B4jxoYMriP
1331782241182105600 2020-11-26 02:10:04 +0000 <ringsaturn_me>  https://t.co/PZcFhK8qai
1329643603036053506 2020-11-20 04:31:53 +0000 <ringsaturn_me>  https://t.co/R0RtLzGD7M
1327900715822456832 2020-11-15 09:06:16 +0000 <ringsaturn_me> Singleflight 的原版代码非常精简  https://t.co/6mM3BXp4qv  后来膨胀了  https://t.co/yrrOJfiLT5
1327593060801208321 2020-11-14 12:43:45 +0000 <ringsaturn_me> 开源项目 #赞助提需求   https://t.co/t7DSTuQacn
1327430830898114561 2020-11-14 01:59:07 +0000 <ringsaturn_me>  https://t.co/fnWw2BbpNy
1327281612237676544 2020-11-13 16:06:10 +0000 <ringsaturn_me> 微信的文章网页翻译是微软提供的  https://t.co/DyqzEtK1RG
1327281186662617088 2020-11-13 16:04:29 +0000 <ringsaturn_me> 非常棒的设计 @dinehq    https://t.co/imKlY3693L
1326887711924391936 2020-11-12 14:00:57 +0000 <ringsaturn_me> Uber H3 好用
1326010274474721281 2020-11-10 03:54:20 +0000 <ringsaturn_me> 编译器的锅。。。   https://t.co/jA6YCCywgL
1325814678744780802 2020-11-09 14:57:06 +0000 <ringsaturn_me> Uber 这个限速器挺好使的   https://t.co/CnnZP8oNUj
1324905327578419202 2020-11-07 02:43:40 +0000 <ringsaturn_me> Golang 的接口功能还挺好使
1324562557248528384 2020-11-06 04:01:37 +0000 <ringsaturn_me>  https://t.co/bVlCvtNAyR
1324562219405770753 2020-11-06 04:00:16 +0000 <ringsaturn_me> Golang 也是这样  https://t.co/Ulq8UpYPr9
1324265654082396160 2020-11-05 08:21:50 +0000 <ringsaturn_me> Python 函数默认值不能是一个函数结果，会固定住  https://t.co/ST4nuGbn8Y
1323163016020463616 2020-11-02 07:20:20 +0000 <ringsaturn_me>  https://t.co/t0I3i3m98B
1322551594047533056 2020-10-31 14:50:46 +0000 <ringsaturn_me> 厉害   https://t.co/Cpjmve6xkF
1322065613230133248 2020-10-30 06:39:39 +0000 <ringsaturn_me> 查了一周查到了这里  https://t.co/uUdgfc4Ft4
1321381532804608002 2020-10-28 09:21:22 +0000 <ringsaturn_me> 更正：新的量化指标用 guages 来记录了
1321138266192580608 2020-10-27 17:14:42 +0000 <ringsaturn_me> 内存1分钟采样一次这种指标就不能用 count 了，踏实用 timing
1321131910936940544 2020-10-27 16:49:27 +0000 <ringsaturn_me> 比如一分钟执行了 1000 次，就被处理成了 16.67 次/每秒  https://t.co/Mey6sUbOTd
1321128751485210624 2020-10-27 16:36:54 +0000 <ringsaturn_me> 离散的系统监控指标不能用 statsD count 功能，会在一定时间范围内自动做聚合操作  https://t.co/myu7yCp7pr  如一分钟的5次采样数据会被处理成每秒平均数。  应该使用 timing 来记录，这样的自动聚合会在原始数据上做聚合，如通过1分钟5次采样得到这5个数的平均数。
1321030683762982913 2020-10-27 10:07:13 +0000 <ringsaturn_me>  https://t.co/PHqFSVyecY
1319682706855186432 2020-10-23 16:50:50 +0000 <ringsaturn_me> 学到了，字符串用 crc32 算哈希，然后再匹配一下就能处理大量的文本了   https://t.co/BIJtZAqOPw
1319578793145630720 2020-10-23 09:57:55 +0000 <ringsaturn_me> 二进制的膨胀：从 12 MB 涨到了 28MB
1319523176334856192 2020-10-23 06:16:55 +0000 <ringsaturn_me> 写了好多 if err != nil { ...
1319167794273865729 2020-10-22 06:44:45 +0000 <ringsaturn_me> 前几天才知道 Golang struct 不同的声明方式会有不同的结果   https://t.co/G3kKjYab76
1318777587099865093 2020-10-21 04:54:13 +0000 <ringsaturn_me> 我以为中文文档只是英文文档的翻译，结果却是。。   https://t.co/2AOfsy7EiJ
1318564203704193025 2020-10-20 14:46:18 +0000 <ringsaturn_me> 补上深色模式下的彩云天气和在意空气  https://t.co/13JBqo7ObU  https://t.co/nEedo0zg1i
1317695456118329348 2020-10-18 05:14:12 +0000 <ringsaturn_me> iOS 和 macOS 上最棒的 RSS 客户端
1317040902565548032 2020-10-16 09:53:15 +0000 <ringsaturn_me> 最近在看 ECMWF 近段时间上线的各种 API 实现，看起来 Django 和 Pandas（或某种类似的 Dataframe 框架）在生产环境下使用了
1317035161482153986 2020-10-16 09:30:26 +0000 <ringsaturn_me> 后两个来自  https://t.co/Y8wcyaGvt2
1317035159342940162 2020-10-16 09:30:25 +0000 <ringsaturn_me> 前两个来自  https://t.co/Mp4db7Ew46
1317035155857559552 2020-10-16 09:30:25 +0000 <ringsaturn_me> 两种空气质量数据可视化  前两个靠恰当的配色，后两个则提高对比度  https://t.co/bf3Fu06BP1
1315512531020967936 2020-10-12 04:40:03 +0000 <ringsaturn_me> @GitHub 客户端会把 star 的人称为「空想家」  https://t.co/2tIyL0R3jz
1313827479077810178 2020-10-07 13:04:15 +0000 <ringsaturn_me> 微软的 outlook 邮件服务有毒，邀请加入 365 家庭共享的邮件被分类到了垃圾箱里，但是真的广告邮件却被丢到了【重要】分组里
1313819410205876226 2020-10-07 12:32:11 +0000 <ringsaturn_me> 之前用 browserless 的容器部署了一个服务，某次容器重启后出来的截图总是闪屏，前几天又重启了一次，结果好了。。。
1313367447492206592 2020-10-06 06:36:15 +0000 <ringsaturn_me> 2014 年一篇介绍开源电子书工具的文章把我拉进了开源软件的世界，然后 Calibre 就磕磕碰碰地开始用，一直到现在管理者一堆电子书，杂志，报纸。  DeDRM 在 Kindle for Mac 的某个版本升级后不能用了，所以好多电子书就只能在 Kindle 里看了。
1313148253727199232 2020-10-05 16:05:15 +0000 <ringsaturn_me> - Python3.8 multiprocessing 提供了共享内存的官方实现 shared_memory  https://t.co/3I8QspNL1k - 有人做了压测  https://t.co/Uoi35ifthj - 作者的回复  https://t.co/juQSyN2jUj - 核心源代码在这里  https://t.co/0j9NZxiyf4 - 这里的提交记录对于研究源代码还是有帮助的  https://t.co/irV4H7ARv5
1312068989825118209 2020-10-02 16:36:38 +0000 <ringsaturn_me> Async Python is not faster   https://t.co/zbmRUJn1dq
1312037584093102081 2020-10-02 14:31:51 +0000 <ringsaturn_me> Calibre 居然完成了向 Python3 的迁移！   https://t.co/NRIYWaIHq2
1312017767063719936 2020-10-02 13:13:06 +0000 <ringsaturn_me> 有意思的点：  - 超过 37% 的现代中国区域是山区，而欧洲只有 10% - 古代欧洲中部的森林主要是硬木树种，在当时的技术条件下比较难以砍伐，所以森林是行进的障碍，类似于山脉的天然屏障，750 年今天德国地区 90% 是森林；同期华北和黄土高原的树相对稀少 - 古代中国的核心区紧凑，欧洲则是被屏障隔开
1312010458296020992 2020-10-02 12:44:03 +0000 <ringsaturn_me> 论文读起来很像即时战略游戏的模拟，以及参数的配置，哈哈哈哈好
1312009691912761344 2020-10-02 12:41:01 +0000 <ringsaturn_me> - 动画视频  https://t.co/IAn3Wvj4c1 - 论文地址  https://t.co/3XQ6VLn989
1311666952918626304 2020-10-01 13:59:05 +0000 <ringsaturn_me> @victongai 的画好梦幻
1311308714851221505 2020-09-30 14:15:35 +0000 <ringsaturn_me>  https://t.co/lvyLWVTXmw  加了 flake8，black，isort 之后就神清气爽了，再加上 pre-commit 里的 flake8，语法 bug 就自动识别l，能踏实调试逻辑 bug
1310950274513678336 2020-09-29 14:31:16 +0000 <ringsaturn_me> Use #PyMongo with Multiprocessing   https://t.co/W59cbp3Iob
1310840843427811335 2020-09-29 07:16:25 +0000 <ringsaturn_me> 日本的 AQI 站点质量和密度都非常高
1310552083322429440 2020-09-28 12:09:00 +0000 <ringsaturn_me> 哈哈哈哈哈 @LingoCloudApp  https://t.co/Kmb82nxFZD
1308990483297980417 2020-09-24 04:43:45 +0000 <ringsaturn_me> PDF Expert 在一个 2000 页的 PDF 里搜索，速度是快，CPU 也飙了。。。
1308739669849382915 2020-09-23 12:07:07 +0000 <ringsaturn_me> 至少有两个专门做用户可以自定义的 #iOS14 widget 的 App 出现了
1306272193572085760 2020-09-16 16:42:14 +0000 <ringsaturn_me> 用 #Redis 作为 LRU 缓存的博文，讲了 maxmemory-policy 的参数。   https://t.co/fJ46zvfdfD…  文章结尾解释了 Redis 端口号 6379 的来源：来自 Alessia Merz 名字的最后四个字母在键盘上的分布。。。。。  图片来自  https://t.co/OOvqs6xIG1  https://t.co/o1jucE2rYF
1306110898428235776 2020-09-16 06:01:19 +0000 <ringsaturn_me> 谢天谢地
1305004463262822400 2020-09-13 04:44:44 +0000 <ringsaturn_me> #Devonthink 的 indent 是按照 tabs 处理的，我的各种代码编辑器的配置是 spaces，结果缩进效果各种错乱。。。
1304694214639251456 2020-09-12 08:11:55 +0000 <ringsaturn_me>  https://t.co/5vU7FBbVnB
1304349121722023936 2020-09-11 09:20:38 +0000 <ringsaturn_me> #Automator 两个动作就能批量将图片转换成 JPG 格式了  https://t.co/Pk4WOqCNO0
1304067404641705984 2020-09-10 14:41:12 +0000 <ringsaturn_me>  https://t.co/snpilFYEWK  https://t.co/saApMTtW1b
1302496429601030144 2020-09-06 06:38:42 +0000 <ringsaturn_me> #Dapper 没有进核心业务里   https://t.co/dekQYM8Epl  &gt; Dapper系统从来没有被真正使用在Google搜索引擎和其他核心业务上，而是作为实验性和研究性课题提出和实践的。Google内部有针对Dapper论文思路的后续、其他改进和实践。所以Dapper论文中的介绍，更多的是启蒙和入门，而非真正的技术指导。
1302165241921372161 2020-09-05 08:42:41 +0000 <ringsaturn_me> iOS Weather App API   https://t.co/GA1bYYzbUp
1302083116983488512 2020-09-05 03:16:21 +0000 <ringsaturn_me>  https://t.co/O43s0z0Hna  https://t.co/oNjt8k9nxx
1301335598188228608 2020-09-03 01:45:58 +0000 <ringsaturn_me> #GeoJSON 工具  -  https://t.co/n4S3IsKe1k -  https://t.co/nhGkqPU9In  地理数据还是乖乖按照 GeoJSON 的标准存储和处理吧，自己造的格式没办法享受数据库提供的地理支持
1301046008999157761 2020-09-02 06:35:15 +0000 <ringsaturn_me> #MongoDB  geo 搜索不能和 count 一块用
1293716714853556224 2020-08-13 01:11:15 +0000 <ringsaturn_me> 竟然有每天执着于给开源项目改 typo 的“开源工作者”
1293377694290210816 2020-08-12 02:44:06 +0000 <ringsaturn_me> 一年了，总算有人回复了   https://t.co/uMCQheWFl1
1292982881946464257 2020-08-11 00:35:16 +0000 <ringsaturn_me>  https://t.co/pl7BvVmjtN
1292657655987572737 2020-08-10 03:02:56 +0000 <ringsaturn_me> uvicorn 的日志输出比以前好看了  https://t.co/RqAoprTW8k
1292385403899584514 2020-08-09 09:01:06 +0000 <ringsaturn_me>  https://t.co/KZRW9anYF8
1291588826356305920 2020-08-07 04:15:47 +0000 <ringsaturn_me> 搜一本书的时候遇上  https://t.co/XRD44M3cRk 了
1290493235765194753 2020-08-04 03:42:18 +0000 <ringsaturn_me> AMIS 文档更新了   https://t.co/sPTPySwLvp
1289924940850855936 2020-08-02 14:04:06 +0000 <ringsaturn_me> SubX 一些技术细节，摘自 《环球科学》2020-08  其他资料：  -  https://t.co/c828Kl9pcX -  https://t.co/weAbAnqg1U -  https://t.co/mTsg48ZR8j -  https://t.co/a7FxcvcxZ4  https://t.co/3vhZ1KbdXZ
1287753618859257856 2020-07-27 14:16:02 +0000 <ringsaturn_me> 好像卡住了。。。  https://t.co/3PT74Z99df
1287249249516679169 2020-07-26 04:51:51 +0000 <ringsaturn_me> 气旋雷达图鉴  https://t.co/SZXTqmpOAF
1286326515383144449 2020-07-23 15:45:14 +0000 <ringsaturn_me> 组件间通过 MLMD 来通信，并维护元数据信息。并一次来对比不同版本模型的效果
1286325903111237637 2020-07-23 15:42:48 +0000 <ringsaturn_me> ML Metadata (MLMD)
1286325713415442433 2020-07-23 15:42:03 +0000 <ringsaturn_me> TFX libraries and pipeline components   https://t.co/OI2Y8yze9t  https://t.co/MfJyVlWpBf
1285139686894125056 2020-07-20 09:09:12 +0000 <ringsaturn_me> 很适合写代码时听的歌  https://t.co/BeYsFFFMF6
1284437829305548800 2020-07-18 10:40:16 +0000 <ringsaturn_me> 意外发现在 #Notion 分享的网页里可以用 Cmd+Shift+L 切换主题，和 Safari 的 Reading List 快捷键是一样的。
1282575876538818561 2020-07-13 07:21:32 +0000 <ringsaturn_me>  https://t.co/k2T2OO1YZE
1282567698946207744 2020-07-13 06:49:03 +0000 <ringsaturn_me> 。。。。。
1281954103153713156 2020-07-11 14:10:50 +0000 <ringsaturn_me> #Golang #Python #NumPy #Gonum   https://t.co/d4xAJbPn1t
1281949084199186432 2020-07-11 13:50:53 +0000 <ringsaturn_me> Github 开始发布事故报告了   https://t.co/WXVOtObLeY  MySQL 整数超出限制印象里遇到过一次
1281885133860036608 2020-07-11 09:36:46 +0000 <ringsaturn_me> 🤔  https://t.co/e5DH84ExKZ
1281085586586005509 2020-07-09 04:39:39 +0000 <ringsaturn_me> 才知道这个超好用的二进制检查软件  https://t.co/yKKnf7k6E4
1280889579755593731 2020-07-08 15:40:48 +0000 <ringsaturn_me>  https://t.co/1Nfign4LDH
1279417477357694986 2020-07-04 14:11:11 +0000 <ringsaturn_me> -  https://t.co/kXu0hG0T5A? -  https://t.co/p8BUVRJ1gE
1279416357730181120 2020-07-04 14:06:44 +0000 <ringsaturn_me> 每次用完支付宝里的饿了么剪贴板就会被写入奇怪的数据：  {"code":0,"data":null,"debugLogs":null,"ext":null,"message":null}  这是 debug 时残留的功能结果直接发布了？
1278724086307229696 2020-07-02 16:15:54 +0000 <ringsaturn_me> 北京下雨  https://t.co/WZmTir11Lx
1277120105101406208 2020-06-28 06:02:15 +0000 <ringsaturn_me> 不同的说法  https://t.co/JJLrxncL8T  如："Editable Text Configuration" or "Extended Tool Chest"  有些牵强，像当年硬把 LISA 解释成 "Locally Integrated Software Architecture" 的感觉
1277117302513659905 2020-06-28 05:51:07 +0000 <ringsaturn_me> /etc 里的 etc 就是 etc #linux  https://t.co/lUaH2KJGVG
1276774770873298944 2020-06-27 07:10:01 +0000 <ringsaturn_me> SwiftUI 好烧。。。
1276085318572052486 2020-06-25 09:30:23 +0000 <ringsaturn_me> @DIYgod @github 苏联政治笑话即视感：  「一老者人行道闲溜，不慎落入道旁河中，遂高呼：“救命！”  一旁有两警察路过，可他们视若不见，仍边走边谈笑。老者情急生智，遂又高呼：“打倒勃列日涅夫！”两警察闻之大惊，急速跳入河中，将老者拖上岸来铐之。」
1275760495123763201 2020-06-24 11:59:39 +0000 <ringsaturn_me> 是时候写个 Swift 程序玩玩了，把我喜欢的但是设计实在不原生的应用用原生的界面实现下。
1274277678556708866 2020-06-20 09:47:28 +0000 <ringsaturn_me>  https://t.co/znkeYGjpbg 和  https://t.co/hZR0rPpbxB 对不会前端的人来说真是太友好了
1269282416033542145 2020-06-06 14:58:04 +0000 <ringsaturn_me> 前几天给 Hugo 弄容器环境来生成静态文件时确实遇到些奇奇怪怪得坑。。。  -  https://t.co/cedxT9k3jT -  https://t.co/a388Lw4jND
1261971172561846273 2020-05-17 10:45:48 +0000 <ringsaturn_me> 之前算是 OOP 的无脑黑，因为某个属性在哪个阶段被修改，甚至类型的改变是被封装起来的。但是 Golang 的 struct 和 Python 的 dataclass 提供了更加透明的处理过程，特别是 dataclass 支持类型的声明，对于结构复杂的数据，反而更加方便了。
1258378722958168065 2020-05-07 12:50:41 +0000 <ringsaturn_me>  https://t.co/5ttkuFOhUG
1258374830753120258 2020-05-07 12:35:13 +0000 <ringsaturn_me> 试试函数式编程 demo  https://t.co/xFxndp4R98
1258017483195215873 2020-05-06 12:55:15 +0000 <ringsaturn_me> Sun 的遗产依旧照耀人间  https://t.co/zHKA14ElLA
1251842315372556288 2020-04-19 11:57:20 +0000 <ringsaturn_me> 。。。。。。。。    https://t.co/ENxLINtGld
1250026976464654338 2020-04-14 11:43:50 +0000 <ringsaturn_me> @Lanszhang  https://t.co/bvT31NeAqY
1248821339265183744 2020-04-11 03:53:03 +0000 <ringsaturn_me>  https://t.co/znGdIUm0RV
1222563318662975488 2020-01-29 16:53:03 +0000 <ringsaturn_me> Inoreader just got an update!
1170346862253002752 2019-09-07 14:43:30 +0000 <ringsaturn_me> Just find iPad Safari support Vim like keyboard shortcut under Reader Mode with external keyboard.  #Vim #Safari #iOS #iPad
[!] No more data! Scraping will stop now.
found 0 deleted tweets in this search.
['twitter'] poster drawer done in `OUT_FOLDER`
